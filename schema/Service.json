{
    "title": "Service",
    "description": "A service provided by an organization, e.g. delivery service, print services, etc.",
    "required": [
        "coreType",
        "name"
    ],
    "properties": {
        "additionalType": {
            "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
            "nuggetType": "URL",
            "type": "string"
        },
        "aggregateRating": {
            "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
            "$ref": "#/components/schema/AggregateRating"
        },
        "alternateName": {
            "description": "An alias for the item.",
            "nuggetType": "Text",
            "type": "string"
        },
        "areaServed": {
            "description": "The geographic area where a service or offered item is provided. Supersedes serviceArea.",
            "oneOf": [
                {
                    "$ref": "#/components/schema/AdministrativeArea"
                },
                {
                    "$ref": "#/components/schema/GeoShape"
                },
                {
                    "$ref": "#/components/schema/Place"
                },
                {
                    "nuggetType": "Text",
                    "type": "string"
                }
            ]
        },
        "audience": {
            "description": "An intended audience, i.e. a group for whom something was created. Supersedes serviceAudience.",
            "$ref": "#/components/schema/Audience"
        },
        "award": {
            "description": "An award won by or for this item. Supersedes awards.",
            "nuggetType": "Text",
            "type": "string"
        },
        "brand": {
            "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.",
            "oneOf": [
                {
                    "$ref": "#/components/schema/Brand"
                },
                {
                    "$ref": "#/components/schema/Organization"
                }
            ]
        },
        "category": {
            "description": "A category for the item. Greater signs or slashes can be used to informally indicate a category hierarchy.",
            "oneOf": [
                {
                    "$ref": "#/components/schema/PhysicalActivityCategory"
                },
                {
                    "nuggetType": "Text",
                    "type": "string"
                },
                {
                    "$ref": "#/components/schema/Thing"
                }
            ]
        },
        "coreType": {
            "description": "The core ActiveRules type",
            "type": "string",
            "enum": [
                "Person",
                "Product",
                "Event",
                "PublishedWork"
            ]
        },
        "description": {
            "description": "A description of the item.",
            "nuggetType": "Text",
            "type": "string"
        },
        "hasOfferCatalog": {
            "description": "Indicates an OfferCatalog listing for this Organization, Person, or Service.",
            "$ref": "#/components/schema/OfferCatalog"
        },
        "identifier": {
            "description": "The identifier property represents any kind of identifier for any kind of Thing, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See background notes for more details.",
            "oneOf": [
                {
                    "$ref": "#/components/schema/PropertyValue"
                },
                {
                    "nuggetType": "Text",
                    "type": "string"
                },
                {
                    "nuggetType": "URL",
                    "type": "string"
                }
            ]
        },
        "image": {
            "description": "An image of the item. This can be a URL or a fully described ImageObject.",
            "oneOf": [
                {
                    "$ref": "#/components/schema/ImageObject"
                },
                {
                    "nuggetType": "URL",
                    "type": "string"
                }
            ]
        },
        "isRelatedTo": {
            "description": "A pointer to another, somehow related product (or multiple products).",
            "oneOf": [
                {
                    "$ref": "#/components/schema/Product"
                },
                {
                    "$ref": "#/components/schema/Service"
                }
            ]
        },
        "isSimilarTo": {
            "description": "A pointer to another, functionally similar product (or multiple products).",
            "oneOf": [
                {
                    "$ref": "#/components/schema/Product"
                },
                {
                    "$ref": "#/components/schema/Service"
                }
            ]
        },
        "logo": {
            "description": "An associated logo.",
            "oneOf": [
                {
                    "$ref": "#/components/schema/ImageObject"
                },
                {
                    "nuggetType": "URL",
                    "type": "string"
                }
            ]
        },
        "name": {
            "description": "The name of the item.",
            "nuggetType": "Text",
            "type": "string"
        },
        "offers": {
            "description": "An offer to provide this item\u2014for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event.",
            "$ref": "#/components/schema/Offer"
        },
        "potentialAction": {
            "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
            "$ref": "#/components/schema/Action"
        },
        "provider": {
            "description": "The service provider, service operator, or service performer; the goods producer. Another party (a seller) may offer those services or goods on behalf of the provider. A provider may also serve as the seller. Supersedes carrier.",
            "oneOf": [
                {
                    "$ref": "#/components/schema/Organization"
                },
                {
                    "$ref": "#/components/schema/Person"
                }
            ]
        },
        "review": {
            "description": "A review of the item. Supersedes reviews.",
            "$ref": "#/components/schema/Review"
        },
        "sameAs": {
            "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.",
            "nuggetType": "URL",
            "type": "string"
        },
        "subjectOf": {
            "description": "A CreativeWork or Event about this Thing.. Inverse property: about.",
            "oneOf": [
                {
                    "$ref": "#/components/schema/CreativeWork"
                },
                {
                    "$ref": "#/components/schema/Event"
                }
            ]
        },
        "url": {
            "description": "URL of the item.",
            "nuggetType": "URL",
            "type": "string"
        }
    },
    "extends": "Intangible",
    "type": "object",
    "components": {
        "schema": {
            "AggregateRating": {
                "title": "AggregateRating",
                "description": "An action performed by a direct agent and indirect participants upon a direct object. Optionally happens at a location with the help of an inanimate instrument. The execution of the action may produce a result. Specific action sub-type documentation specifies the exact expectation of each argument/role.",
                "required": [
                    "coreType",
                    "name"
                ],
                "properties": {
                    "additionalType": {
                        "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "alternateName": {
                        "description": "An alias for the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "coreType": {
                        "description": "The core ActiveRules type",
                        "type": "string",
                        "enum": [
                            "Person",
                            "Product",
                            "Event",
                            "PublishedWork"
                        ]
                    },
                    "description": {
                        "description": "A description of the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "identifier": {
                        "description": "The identifier property represents any kind of identifier for any kind of Thing, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See background notes for more details.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/PropertyValue"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "image": {
                        "description": "An image of the item. This can be a URL or a fully described ImageObject.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/ImageObject"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "name": {
                        "description": "The name of the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "potentialAction": {
                        "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
                        "$ref": "#/components/schema/Action"
                    },
                    "sameAs": {
                        "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "subjectOf": {
                        "description": "A CreativeWork or Event about this Thing.. Inverse property: about.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/CreativeWork"
                            },
                            {
                                "$ref": "#/components/schema/Event"
                            }
                        ]
                    },
                    "url": {
                        "description": "URL of the item.",
                        "nuggetType": "URL",
                        "type": "string"
                    }
                },
                "extends": "Rating",
                "type": "object"
            },
            "AdministrativeArea": {
                "title": "AdministrativeArea",
                "description": "A geographical region, typically under the jurisdiction of a particular government.",
                "required": [
                    "coreType",
                    "name"
                ],
                "properties": {
                    "additionalProperty": {
                        "description": "A property-value pair representing an additional characteristics of the entitity, e.g. a product feature or another characteristic for which there is no matching property in schema.org. Note: Publishers should be aware that applications designed to use specific schema.org properties (e.g. http://schema.org/width, http://schema.org/color, http://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.",
                        "$ref": "#/components/schema/PropertyValue"
                    },
                    "additionalType": {
                        "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "address": {
                        "description": "Physical address of the item.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/PostalAddress"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            }
                        ]
                    },
                    "aggregateRating": {
                        "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
                        "$ref": "#/components/schema/AggregateRating"
                    },
                    "alternateName": {
                        "description": "An alias for the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "amenityFeature": {
                        "description": "An amenity feature (e.g. a characteristic or service) of the Accommodation. This generic property does not make a statement about whether the feature is included in an offer for the main accommodation or available at extra costs.",
                        "$ref": "#/components/schema/LocationFeatureSpecification"
                    },
                    "branchCode": {
                        "description": "A short textual code (also called \"store code\") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs. For example, in the URL http://www.starbucks.co.uk/store-locator/etc/detail/3047 the code \"3047\" is a branchCode for a particular branch.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "containedInPlace": {
                        "description": "The basic containment relation between a place and one that contains it. Supersedes containedIn. Inverse property: containsPlace.",
                        "$ref": "#/components/schema/Place"
                    },
                    "containsPlace": {
                        "description": "The basic containment relation between a place and another that it contains. Inverse property: containedInPlace.",
                        "$ref": "#/components/schema/Place"
                    },
                    "coreType": {
                        "description": "The core ActiveRules type",
                        "type": "string",
                        "enum": [
                            "Person",
                            "Product",
                            "Event",
                            "PublishedWork"
                        ]
                    },
                    "description": {
                        "description": "A description of the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "event": {
                        "description": "Upcoming or past event associated with this place, organization, or action. Supersedes events.",
                        "$ref": "#/components/schema/Event"
                    },
                    "faxNumber": {
                        "description": "The fax number.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "geo": {
                        "description": "The geo coordinates of the place.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/GeoCoordinates"
                            },
                            {
                                "$ref": "#/components/schema/GeoShape"
                            }
                        ]
                    },
                    "geospatiallyContains": {
                        "description": "Represents a relationship between two geometries (or the places they represent), relating a containing geometry to a contained geometry. \"a contains b iff no points of b lie in the exterior of a, and at least one point of the interior of b lies in the interior of a\". As defined in DE-9IM.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/GeospatialGeometry"
                            },
                            {
                                "$ref": "#/components/schema/Place"
                            }
                        ]
                    },
                    "geospatiallyCoveredBy": {
                        "description": "Represents a relationship between two geometries (or the places they represent), relating a geometry to another that covers it. As defined in DE-9IM.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/GeospatialGeometry"
                            },
                            {
                                "$ref": "#/components/schema/Place"
                            }
                        ]
                    },
                    "geospatiallyCovers": {
                        "description": "Represents a relationship between two geometries (or the places they represent), relating a covering geometry to a covered geometry. \"Every point of b is a point of (the interior or boundary of) a\". As defined in DE-9IM.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/GeospatialGeometry"
                            },
                            {
                                "$ref": "#/components/schema/Place"
                            }
                        ]
                    },
                    "geospatiallyCrosses": {
                        "description": "Represents a relationship between two geometries (or the places they represent), relating a geometry to another that crosses it: \"a crosses b: they have some but not all interior points in common, and the dimension of the intersection is less than that of at least one of them\". As defined in DE-9IM.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/GeospatialGeometry"
                            },
                            {
                                "$ref": "#/components/schema/Place"
                            }
                        ]
                    },
                    "geospatiallyDisjoint": {
                        "description": "Represents spatial relations in which two geometries (or the places they represent) are topologically disjoint: they have no point in common. They form a set of disconnected geometries.\" (a symmetric relationship, as defined in DE-9IM)",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/GeospatialGeometry"
                            },
                            {
                                "$ref": "#/components/schema/Place"
                            }
                        ]
                    },
                    "geospatiallyEquals": {
                        "description": "Represents spatial relations in which two geometries (or the places they represent) are topologically equal, as defined in DE-9IM. \"Two geometries are topologically equal if their interiors intersect and no part of the interior or boundary of one geometry intersects the exterior of the other\" (a symmetric relationship)",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/GeospatialGeometry"
                            },
                            {
                                "$ref": "#/components/schema/Place"
                            }
                        ]
                    },
                    "geospatiallyIntersects": {
                        "description": "Represents spatial relations in which two geometries (or the places they represent) have at least one point in common. As defined in DE-9IM.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/GeospatialGeometry"
                            },
                            {
                                "$ref": "#/components/schema/Place"
                            }
                        ]
                    },
                    "geospatiallyOverlaps": {
                        "description": "Represents a relationship between two geometries (or the places they represent), relating a geometry to another that geospatially overlaps it, i.e. they have some but not all points in common. As defined in DE-9IM.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/GeospatialGeometry"
                            },
                            {
                                "$ref": "#/components/schema/Place"
                            }
                        ]
                    },
                    "geospatiallyTouches": {
                        "description": "Represents spatial relations in which two geometries (or the places they represent) touch: they have at least one boundary point in common, but no interior points.\" (a symmetric relationship, as defined in DE-9IM )",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/GeospatialGeometry"
                            },
                            {
                                "$ref": "#/components/schema/Place"
                            }
                        ]
                    },
                    "geospatiallyWithin": {
                        "description": "Represents a relationship between two geometries (or the places they represent), relating a geometry to one that contains it, i.e. it is inside (i.e. within) its interior. As defined in DE-9IM.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/GeospatialGeometry"
                            },
                            {
                                "$ref": "#/components/schema/Place"
                            }
                        ]
                    },
                    "globalLocationNumber": {
                        "description": "The Global Location Number (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "hasMap": {
                        "description": "A URL to a map of the place. Supersedes map, maps.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Map"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "identifier": {
                        "description": "The identifier property represents any kind of identifier for any kind of Thing, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See background notes for more details.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/PropertyValue"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "image": {
                        "description": "An image of the item. This can be a URL or a fully described ImageObject.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/ImageObject"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "isAccessibleForFree": {
                        "description": "A flag to signal that the item, event, or place is accessible for free. Supersedes free.",
                        "nuggetType": "Boolean",
                        "type": " boolean"
                    },
                    "isicV4": {
                        "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "logo": {
                        "description": "An associated logo.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/ImageObject"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "maximumAttendeeCapacity": {
                        "description": "The total number of individuals that may attend an event or venue.",
                        "nuggetType": "Integer",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name of the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "openingHoursSpecification": {
                        "description": "The opening hours of a certain place.",
                        "$ref": "#/components/schema/OpeningHoursSpecification"
                    },
                    "photo": {
                        "description": "A photograph of this place. Supersedes photos.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/ImageObject"
                            },
                            {
                                "$ref": "#/components/schema/Photograph"
                            }
                        ]
                    },
                    "potentialAction": {
                        "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
                        "$ref": "#/components/schema/Action"
                    },
                    "publicAccess": {
                        "description": "A flag to signal that the Place is open to public visitors. If this property is omitted there is no assumed default boolean value",
                        "nuggetType": "Boolean",
                        "type": " boolean"
                    },
                    "review": {
                        "description": "A review of the item. Supersedes reviews.",
                        "$ref": "#/components/schema/Review"
                    },
                    "sameAs": {
                        "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "smokingAllowed": {
                        "description": "Indicates whether it is allowed to smoke in the place, e.g. in the restaurant, hotel or hotel room.",
                        "nuggetType": "Boolean",
                        "type": " boolean"
                    },
                    "specialOpeningHoursSpecification": {
                        "description": "The special opening hours of a certain place. Use this to explicitly override general opening hours brought in scope by openingHoursSpecificationor openingHours.",
                        "$ref": "#/components/schema/OpeningHoursSpecification"
                    },
                    "subjectOf": {
                        "description": "A CreativeWork or Event about this Thing.. Inverse property: about.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/CreativeWork"
                            },
                            {
                                "$ref": "#/components/schema/Event"
                            }
                        ]
                    },
                    "telephone": {
                        "description": "The telephone number.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "url": {
                        "description": "URL of the item.",
                        "nuggetType": "URL",
                        "type": "string"
                    }
                },
                "extends": "Place",
                "type": "object"
            },
            "GeoShape": {
                "title": "GeoShape",
                "description": "The geographic shape of a place. A GeoShape can be described using several properties whose values are based on latitude/longitude pairs. Either whitespace or commas can be used to separate latitude and longitude; whitespace should be used when writing a list of several such points.",
                "required": [
                    "coreType",
                    "name"
                ],
                "properties": {
                    "additionalType": {
                        "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "address": {
                        "description": "Physical address of the item.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/PostalAddress"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            }
                        ]
                    },
                    "alternateName": {
                        "description": "An alias for the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "coreType": {
                        "description": "The core ActiveRules type",
                        "type": "string",
                        "enum": [
                            "Person",
                            "Product",
                            "Event",
                            "PublishedWork"
                        ]
                    },
                    "description": {
                        "description": "A description of the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "identifier": {
                        "description": "The identifier property represents any kind of identifier for any kind of Thing, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See background notes for more details.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/PropertyValue"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "image": {
                        "description": "An image of the item. This can be a URL or a fully described ImageObject.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/ImageObject"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "name": {
                        "description": "The name of the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "potentialAction": {
                        "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
                        "$ref": "#/components/schema/Action"
                    },
                    "sameAs": {
                        "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "subjectOf": {
                        "description": "A CreativeWork or Event about this Thing.. Inverse property: about.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/CreativeWork"
                            },
                            {
                                "$ref": "#/components/schema/Event"
                            }
                        ]
                    },
                    "url": {
                        "description": "URL of the item.",
                        "nuggetType": "URL",
                        "type": "string"
                    }
                },
                "extends": "StructuredValue",
                "type": "object"
            },
            "Place": {
                "title": "Place",
                "description": "Entities that have a somewhat fixed, physical extension.",
                "properties": {
                    "additionalProperty": {
                        "description": "A property-value pair representing an additional characteristics of the entitity, e.g. a product feature or another characteristic for which there is no matching property in schema.org. Note: Publishers should be aware that applications designed to use specific schema.org properties (e.g. http://schema.org/width, http://schema.org/color, http://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.",
                        "$ref": "#/components/schema/PropertyValue"
                    },
                    "additionalType": {
                        "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "address": {
                        "description": "Physical address of the item.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/PostalAddress"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            }
                        ]
                    },
                    "aggregateRating": {
                        "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
                        "$ref": "#/components/schema/AggregateRating"
                    },
                    "alternateName": {
                        "description": "An alias for the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "amenityFeature": {
                        "description": "An amenity feature (e.g. a characteristic or service) of the Accommodation. This generic property does not make a statement about whether the feature is included in an offer for the main accommodation or available at extra costs.",
                        "$ref": "#/components/schema/LocationFeatureSpecification"
                    },
                    "branchCode": {
                        "description": "A short textual code (also called \"store code\") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs. For example, in the URL http://www.starbucks.co.uk/store-locator/etc/detail/3047 the code \"3047\" is a branchCode for a particular branch.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "containedInPlace": {
                        "description": "The basic containment relation between a place and one that contains it. Supersedes containedIn. Inverse property: containsPlace.",
                        "$ref": "#/components/schema/Place"
                    },
                    "containsPlace": {
                        "description": "The basic containment relation between a place and another that it contains. Inverse property: containedInPlace.",
                        "$ref": "#/components/schema/Place"
                    },
                    "coreType": {
                        "description": "The core ActiveRules type",
                        "type": "string",
                        "enum": [
                            "Person",
                            "Product",
                            "Event",
                            "PublishedWork"
                        ]
                    },
                    "description": {
                        "description": "A description of the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "event": {
                        "description": "Upcoming or past event associated with this place, organization, or action. Supersedes events.",
                        "$ref": "#/components/schema/Event"
                    },
                    "faxNumber": {
                        "description": "The fax number.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "geo": {
                        "description": "The geo coordinates of the place.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/GeoCoordinates"
                            },
                            {
                                "$ref": "#/components/schema/GeoShape"
                            }
                        ]
                    },
                    "geospatiallyContains": {
                        "description": "Represents a relationship between two geometries (or the places they represent), relating a containing geometry to a contained geometry. \"a contains b iff no points of b lie in the exterior of a, and at least one point of the interior of b lies in the interior of a\". As defined in DE-9IM.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/GeospatialGeometry"
                            },
                            {
                                "$ref": "#/components/schema/Place"
                            }
                        ]
                    },
                    "geospatiallyCoveredBy": {
                        "description": "Represents a relationship between two geometries (or the places they represent), relating a geometry to another that covers it. As defined in DE-9IM.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/GeospatialGeometry"
                            },
                            {
                                "$ref": "#/components/schema/Place"
                            }
                        ]
                    },
                    "geospatiallyCovers": {
                        "description": "Represents a relationship between two geometries (or the places they represent), relating a covering geometry to a covered geometry. \"Every point of b is a point of (the interior or boundary of) a\". As defined in DE-9IM.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/GeospatialGeometry"
                            },
                            {
                                "$ref": "#/components/schema/Place"
                            }
                        ]
                    },
                    "geospatiallyCrosses": {
                        "description": "Represents a relationship between two geometries (or the places they represent), relating a geometry to another that crosses it: \"a crosses b: they have some but not all interior points in common, and the dimension of the intersection is less than that of at least one of them\". As defined in DE-9IM.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/GeospatialGeometry"
                            },
                            {
                                "$ref": "#/components/schema/Place"
                            }
                        ]
                    },
                    "geospatiallyDisjoint": {
                        "description": "Represents spatial relations in which two geometries (or the places they represent) are topologically disjoint: they have no point in common. They form a set of disconnected geometries.\" (a symmetric relationship, as defined in DE-9IM)",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/GeospatialGeometry"
                            },
                            {
                                "$ref": "#/components/schema/Place"
                            }
                        ]
                    },
                    "geospatiallyEquals": {
                        "description": "Represents spatial relations in which two geometries (or the places they represent) are topologically equal, as defined in DE-9IM. \"Two geometries are topologically equal if their interiors intersect and no part of the interior or boundary of one geometry intersects the exterior of the other\" (a symmetric relationship)",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/GeospatialGeometry"
                            },
                            {
                                "$ref": "#/components/schema/Place"
                            }
                        ]
                    },
                    "geospatiallyIntersects": {
                        "description": "Represents spatial relations in which two geometries (or the places they represent) have at least one point in common. As defined in DE-9IM.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/GeospatialGeometry"
                            },
                            {
                                "$ref": "#/components/schema/Place"
                            }
                        ]
                    },
                    "geospatiallyOverlaps": {
                        "description": "Represents a relationship between two geometries (or the places they represent), relating a geometry to another that geospatially overlaps it, i.e. they have some but not all points in common. As defined in DE-9IM.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/GeospatialGeometry"
                            },
                            {
                                "$ref": "#/components/schema/Place"
                            }
                        ]
                    },
                    "geospatiallyTouches": {
                        "description": "Represents spatial relations in which two geometries (or the places they represent) touch: they have at least one boundary point in common, but no interior points.\" (a symmetric relationship, as defined in DE-9IM )",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/GeospatialGeometry"
                            },
                            {
                                "$ref": "#/components/schema/Place"
                            }
                        ]
                    },
                    "geospatiallyWithin": {
                        "description": "Represents a relationship between two geometries (or the places they represent), relating a geometry to one that contains it, i.e. it is inside (i.e. within) its interior. As defined in DE-9IM.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/GeospatialGeometry"
                            },
                            {
                                "$ref": "#/components/schema/Place"
                            }
                        ]
                    },
                    "globalLocationNumber": {
                        "description": "The Global Location Number (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "hasMap": {
                        "description": "A URL to a map of the place. Supersedes map, maps.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Map"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "identifier": {
                        "description": "The identifier property represents any kind of identifier for any kind of Thing, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See background notes for more details.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/PropertyValue"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "image": {
                        "description": "An image of the item. This can be a URL or a fully described ImageObject.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/ImageObject"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "isAccessibleForFree": {
                        "description": "A flag to signal that the item, event, or place is accessible for free. Supersedes free.",
                        "nuggetType": "Boolean",
                        "type": " boolean"
                    },
                    "isicV4": {
                        "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "logo": {
                        "description": "An associated logo.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/ImageObject"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "maximumAttendeeCapacity": {
                        "description": "The total number of individuals that may attend an event or venue.",
                        "nuggetType": "Integer",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name of the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "openingHoursSpecification": {
                        "description": "The opening hours of a certain place.",
                        "$ref": "#/components/schema/OpeningHoursSpecification"
                    },
                    "photo": {
                        "description": "A photograph of this place. Supersedes photos.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/ImageObject"
                            },
                            {
                                "$ref": "#/components/schema/Photograph"
                            }
                        ]
                    },
                    "potentialAction": {
                        "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
                        "$ref": "#/components/schema/Action"
                    },
                    "publicAccess": {
                        "description": "A flag to signal that the Place is open to public visitors. If this property is omitted there is no assumed default boolean value",
                        "nuggetType": "Boolean",
                        "type": " boolean"
                    },
                    "review": {
                        "description": "A review of the item. Supersedes reviews.",
                        "$ref": "#/components/schema/Review"
                    },
                    "sameAs": {
                        "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "smokingAllowed": {
                        "description": "Indicates whether it is allowed to smoke in the place, e.g. in the restaurant, hotel or hotel room.",
                        "nuggetType": "Boolean",
                        "type": " boolean"
                    },
                    "specialOpeningHoursSpecification": {
                        "description": "The special opening hours of a certain place. Use this to explicitly override general opening hours brought in scope by openingHoursSpecificationor openingHours.",
                        "$ref": "#/components/schema/OpeningHoursSpecification"
                    },
                    "subjectOf": {
                        "description": "A CreativeWork or Event about this Thing.. Inverse property: about.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/CreativeWork"
                            },
                            {
                                "$ref": "#/components/schema/Event"
                            }
                        ]
                    },
                    "telephone": {
                        "description": "The telephone number.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "url": {
                        "description": "URL of the item.",
                        "nuggetType": "URL",
                        "type": "string"
                    }
                },
                "extends": "Thing",
                "type": "object"
            },
            "Audience": {
                "title": "Audience",
                "description": "Intended audience for an item, i.e. the group for whom the item was created.",
                "required": [
                    "coreType",
                    "name"
                ],
                "properties": {
                    "additionalType": {
                        "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "alternateName": {
                        "description": "An alias for the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "coreType": {
                        "description": "The core ActiveRules type",
                        "type": "string",
                        "enum": [
                            "Person",
                            "Product",
                            "Event",
                            "PublishedWork"
                        ]
                    },
                    "description": {
                        "description": "A description of the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "identifier": {
                        "description": "The identifier property represents any kind of identifier for any kind of Thing, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See background notes for more details.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/PropertyValue"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "image": {
                        "description": "An image of the item. This can be a URL or a fully described ImageObject.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/ImageObject"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "name": {
                        "description": "The name of the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "potentialAction": {
                        "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
                        "$ref": "#/components/schema/Action"
                    },
                    "sameAs": {
                        "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "subjectOf": {
                        "description": "A CreativeWork or Event about this Thing.. Inverse property: about.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/CreativeWork"
                            },
                            {
                                "$ref": "#/components/schema/Event"
                            }
                        ]
                    },
                    "url": {
                        "description": "URL of the item.",
                        "nuggetType": "URL",
                        "type": "string"
                    }
                },
                "extends": "Intangible",
                "type": "object"
            },
            "Brand": {
                "description": "A brand is a name used by an organization or business person for labeling a product, product group, or similar.",
                "title": "Brand",
                "properties": {
                    "additionalType": {
                        "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "aggregateRating": {
                        "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
                        "$ref": "#/components/schema/AggregateRating"
                    },
                    "alternateName": {
                        "description": "An alias for the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "coreType": {
                        "description": "The core ActiveRules type",
                        "type": "string",
                        "enum": [
                            "Person",
                            "Product",
                            "Event",
                            "PublishedWork"
                        ]
                    },
                    "description": {
                        "description": "A description of the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "identifier": {
                        "description": "The identifier property represents any kind of identifier for any kind of Thing, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See background notes for more details.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/PropertyValue"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "image": {
                        "description": "An image of the item. This can be a URL or a fully described ImageObject.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/ImageObject"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "logo": {
                        "description": "An associated logo.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/ImageObject"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "name": {
                        "description": "The name of the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "potentialAction": {
                        "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
                        "$ref": "#/components/schema/Action"
                    },
                    "review": {
                        "description": "A review of the item. Supersedes reviews.",
                        "$ref": "#/components/schema/Review"
                    },
                    "sameAs": {
                        "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "subjectOf": {
                        "description": "A CreativeWork or Event about this Thing.. Inverse property: about.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/CreativeWork"
                            },
                            {
                                "$ref": "#/components/schema/Event"
                            }
                        ]
                    },
                    "url": {
                        "description": "URL of the item.",
                        "nuggetType": "URL",
                        "type": "string"
                    }
                },
                "extends": "Intangible",
                "type": "object"
            },
            "Organization": {
                "title": "Organization",
                "description": "An organization such as a school, NGO, corporation, club, etc.",
                "required": [
                    "coreType",
                    "name"
                ],
                "properties": {
                    "actionableFeedbackPolicy": {
                        "description": "For a NewsMediaOrganization or other news-related Organization, a statement about public engagement activities (for news media, the newsroom\u2019s), including involving the public - digitally or otherwise -- in coverage decisions, reporting and activities after publication.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/CreativeWork"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "additionalType": {
                        "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "address": {
                        "description": "Physical address of the item.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/PostalAddress"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            }
                        ]
                    },
                    "aggregateRating": {
                        "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
                        "$ref": "#/components/schema/AggregateRating"
                    },
                    "alternateName": {
                        "description": "An alias for the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "alumni": {
                        "description": "Alumni of an organization. Inverse property: alumniOf.",
                        "$ref": "#/components/schema/Person"
                    },
                    "areaServed": {
                        "description": "The geographic area where a service or offered item is provided. Supersedes serviceArea.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/AdministrativeArea"
                            },
                            {
                                "$ref": "#/components/schema/GeoShape"
                            },
                            {
                                "$ref": "#/components/schema/Place"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            }
                        ]
                    },
                    "award": {
                        "description": "An award won by or for this item. Supersedes awards.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "brand": {
                        "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Brand"
                            },
                            {
                                "$ref": "#/components/schema/Organization"
                            }
                        ]
                    },
                    "contactPoint": {
                        "description": "A contact point for a person or organization. Supersedes contactPoints.",
                        "$ref": "#/components/schema/ContactPoint"
                    },
                    "coreType": {
                        "description": "The core ActiveRules type",
                        "type": "string",
                        "enum": [
                            "Person",
                            "Product",
                            "Event",
                            "PublishedWork"
                        ]
                    },
                    "correctionsPolicy": {
                        "description": "For an Organization (e.g. NewsMediaOrganization), a statement describing (in news media, the newsroom\u2019s) disclosure and correction policy for errors.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/CreativeWork"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "department": {
                        "description": "A relationship between an organization and a department of that organization, also described as an organization (allowing different urls, logos, opening hours). For example: a store with a pharmacy, or a bakery with a cafe.",
                        "$ref": "#/components/schema/Organization"
                    },
                    "description": {
                        "description": "A description of the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "dissolutionDate": {
                        "description": "The date that this organization was dissolved.",
                        "nuggetType": "Date",
                        "type": "string"
                    },
                    "diversityPolicy": {
                        "description": "Statement on diversity policy by an Organization e.g. a NewsMediaOrganization. For a NewsMediaOrganization, a statement describing the newsroom\u2019s diversity policy on both staffing and sources, typically providing staffing data.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/CreativeWork"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "duns": {
                        "description": "The Dun & Bradstreet DUNS number for identifying an organization or business person.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email address.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "employee": {
                        "description": "Someone working for this organization. Supersedes employees.",
                        "$ref": "#/components/schema/Person"
                    },
                    "ethicsPolicy": {
                        "description": "Statement about ethics policy, e.g. of a NewsMediaOrganization regarding journalistic and publishing practices, or of a Restaurant, a page describing food source policies. In the case of a NewsMediaOrganization, an ethicsPolicy is typically a statement describing the personal, organizational, and corporate standards of behavior expected by the organization.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/CreativeWork"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "event": {
                        "description": "Upcoming or past event associated with this place, organization, or action. Supersedes events.",
                        "$ref": "#/components/schema/Event"
                    },
                    "faxNumber": {
                        "description": "The fax number.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "founder": {
                        "description": "A person who founded this organization. Supersedes founders.",
                        "$ref": "#/components/schema/Person"
                    },
                    "foundingDate": {
                        "description": "The date that this organization was founded.",
                        "nuggetType": "Date",
                        "type": "string"
                    },
                    "foundingLocation": {
                        "description": "The place where the Organization was founded.",
                        "$ref": "#/components/schema/Place"
                    },
                    "funder": {
                        "description": "A person or organization that supports (sponsors) something through some kind of financial contribution.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "globalLocationNumber": {
                        "description": "The Global Location Number (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "hasOfferCatalog": {
                        "description": "Indicates an OfferCatalog listing for this Organization, Person, or Service.",
                        "$ref": "#/components/schema/OfferCatalog"
                    },
                    "hasPOS": {
                        "description": "Points-of-Sales operated by the organization or person.",
                        "$ref": "#/components/schema/Place"
                    },
                    "identifier": {
                        "description": "The identifier property represents any kind of identifier for any kind of Thing, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See background notes for more details.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/PropertyValue"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "image": {
                        "description": "An image of the item. This can be a URL or a fully described ImageObject.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/ImageObject"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "isicV4": {
                        "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "legalName": {
                        "description": "The official name of the organization, e.g. the registered company name.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "leiCode": {
                        "description": "An organization identifier that uniquely identifies a legal entity as defined in ISO 17442.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "location": {
                        "description": "The location of for example where the event is happening, an organization is located, or where an action takes place.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Place"
                            },
                            {
                                "$ref": "#/components/schema/PostalAddress"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            }
                        ]
                    },
                    "logo": {
                        "description": "An associated logo.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/ImageObject"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "makesOffer": {
                        "description": "A pointer to products or services offered by the organization or person. Inverse property: offeredBy.",
                        "$ref": "#/components/schema/Offer"
                    },
                    "member": {
                        "description": "A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals. Supersedes members, musicGroupMember. Inverse property: memberOf.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "memberOf": {
                        "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs. Inverse property: member.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/ProgramMembership"
                            }
                        ]
                    },
                    "naics": {
                        "description": "The North American Industry Classification System (NAICS) code for a particular organization or business person.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "numberOfEmployees": {
                        "description": "The number of employees in an organization e.g. business.",
                        "$ref": "#/components/schema/QuantitativeValue"
                    },
                    "owns": {
                        "description": "Products owned by the organization or person.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/OwnershipInfo"
                            },
                            {
                                "$ref": "#/components/schema/Product"
                            }
                        ]
                    },
                    "parentOrganization": {
                        "description": "The larger organization that this organization is a subOrganization of, if any. Supersedes branchOf. Inverse property: subOrganization.",
                        "$ref": "#/components/schema/Organization"
                    },
                    "potentialAction": {
                        "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
                        "$ref": "#/components/schema/Action"
                    },
                    "publishingPrinciples": {
                        "description": "The publishingPrinciples property indicates (typically via URL) a document describing the editorial principles of an Organization (or individual e.g. a Person writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a CreativeWork (e.g. NewsArticle) the principles are those of the party primarily responsible for the creation of the CreativeWork. While such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a funder) can be expressed using schema.org terminology.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/CreativeWork"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "review": {
                        "description": "A review of the item. Supersedes reviews.",
                        "$ref": "#/components/schema/Review"
                    },
                    "sameAs": {
                        "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "seeks": {
                        "description": "A pointer to products or services sought by the organization or person (demand).",
                        "$ref": "#/components/schema/Demand"
                    },
                    "sponsor": {
                        "description": "A person or organization that supports a thing through a pledge, promise, or financial contribution. e.g. a sponsor of a Medical Study or a corporate sponsor of an event.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "subOrganization": {
                        "description": "A relationship between two organizations where the first includes the second, e.g., as a subsidiary. See also: the more specific 'department' property. Inverse property: parentOrganization.",
                        "$ref": "#/components/schema/Organization"
                    },
                    "subjectOf": {
                        "description": "A CreativeWork or Event about this Thing.. Inverse property: about.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/CreativeWork"
                            },
                            {
                                "$ref": "#/components/schema/Event"
                            }
                        ]
                    },
                    "taxID": {
                        "description": "The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "telephone": {
                        "description": "The telephone number.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "unnamedSourcesPolicy": {
                        "description": "For an Organization (typically a NewsMediaOrganization), a statement about policy on use of unnamed sources and the decision process required.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/CreativeWork"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "url": {
                        "description": "URL of the item.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "vatID": {
                        "description": "The Value-added Tax ID of the organization or person.",
                        "nuggetType": "Text",
                        "type": "string"
                    }
                },
                "extends": "Thing",
                "type": "object"
            },
            "PhysicalActivityCategory": {
                "title": "PhysicalActivityCategory",
                "description": "Categories of physical activity, organized by physiologic classification.",
                "required": [
                    "coreType",
                    "name"
                ],
                "properties": {
                    "additionalType": {
                        "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "alternateName": {
                        "description": "An alias for the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "coreType": {
                        "description": "The core ActiveRules type",
                        "type": "string",
                        "enum": [
                            "Person",
                            "Product",
                            "Event",
                            "PublishedWork"
                        ]
                    },
                    "description": {
                        "description": "A description of the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "identifier": {
                        "description": "The identifier property represents any kind of identifier for any kind of Thing, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See background notes for more details.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/PropertyValue"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "image": {
                        "description": "An image of the item. This can be a URL or a fully described ImageObject.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/ImageObject"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "name": {
                        "description": "The name of the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "potentialAction": {
                        "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
                        "$ref": "#/components/schema/Action"
                    },
                    "sameAs": {
                        "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "subjectOf": {
                        "description": "A CreativeWork or Event about this Thing.. Inverse property: about.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/CreativeWork"
                            },
                            {
                                "$ref": "#/components/schema/Event"
                            }
                        ]
                    },
                    "url": {
                        "description": "URL of the item.",
                        "nuggetType": "URL",
                        "type": "string"
                    }
                },
                "extends": "Enumeration",
                "supersededBy": [
                    "Class",
                    "Enumeration",
                    "Property"
                ],
                "type": "object"
            },
            "Thing": {
                "title": "Thing",
                "description": "Base object type for everything else",
                "required": [
                    "coreType",
                    "name"
                ],
                "properties": {
                    "additionalType": {
                        "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "alternateName": {
                        "description": "An alias for the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "coreType": {
                        "description": "The core ActiveRules type",
                        "type": "string",
                        "enum": [
                            "Person",
                            "Product",
                            "Event",
                            "PublishedWork"
                        ]
                    },
                    "description": {
                        "description": "A description of the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "identifier": {
                        "description": "The identifier property represents any kind of identifier for any kind of Thing, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See background notes for more details.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/PropertyValue"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "image": {
                        "description": "An image of the item. This can be a URL or a fully described ImageObject.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/ImageObject"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "name": {
                        "description": "The name of the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "potentialAction": {
                        "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
                        "$ref": "#/components/schema/Action"
                    },
                    "sameAs": {
                        "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "subjectOf": {
                        "description": "A CreativeWork or Event about this Thing.. Inverse property: about.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/CreativeWork"
                            },
                            {
                                "$ref": "#/components/schema/Event"
                            }
                        ]
                    },
                    "url": {
                        "description": "URL of the item.",
                        "nuggetType": "URL",
                        "type": "string"
                    }
                },
                "extends": "Nugget",
                "type": "object"
            },
            "OfferCatalog": {
                "description": "An OfferCatalog is an ItemList that contains related Offers and/or further OfferCatalogs that are offeredBy the same provider.",
                "title": "OfferCatalog",
                "properties": {
                    "additionalType": {
                        "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "alternateName": {
                        "description": "An alias for the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "coreType": {
                        "description": "The core ActiveRules type",
                        "type": "string",
                        "enum": [
                            "Person",
                            "Product",
                            "Event",
                            "PublishedWork"
                        ]
                    },
                    "description": {
                        "description": "A description of the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "identifier": {
                        "description": "The identifier property represents any kind of identifier for any kind of Thing, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See background notes for more details.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/PropertyValue"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "image": {
                        "description": "An image of the item. This can be a URL or a fully described ImageObject.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/ImageObject"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "name": {
                        "description": "The name of the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "potentialAction": {
                        "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
                        "$ref": "#/components/schema/Action"
                    },
                    "sameAs": {
                        "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "subjectOf": {
                        "description": "A CreativeWork or Event about this Thing.. Inverse property: about.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/CreativeWork"
                            },
                            {
                                "$ref": "#/components/schema/Event"
                            }
                        ]
                    },
                    "url": {
                        "description": "URL of the item.",
                        "nuggetType": "URL",
                        "type": "string"
                    }
                },
                "extends": "ItemList",
                "type": "object"
            },
            "PropertyValue": {
                "description": "A property-value pair, e.g. representing a feature of a product or place. Use the 'name' property for the name of the property. If there is an additional human-readable version of the value, put that into the 'description' property.Always use specific schema.org properties when a) they exist and b) you can populate them. Using PropertyValue as a substitute will typically not trigger the same effect as using the original, specific property.",
                "title": "PropertyValue",
                "properties": {
                    "additionalType": {
                        "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "alternateName": {
                        "description": "An alias for the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "coreType": {
                        "description": "The core ActiveRules type",
                        "type": "string",
                        "enum": [
                            "Person",
                            "Product",
                            "Event",
                            "PublishedWork"
                        ]
                    },
                    "description": {
                        "description": "A description of the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "identifier": {
                        "description": "The identifier property represents any kind of identifier for any kind of Thing, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See background notes for more details.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/PropertyValue"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "image": {
                        "description": "An image of the item. This can be a URL or a fully described ImageObject.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/ImageObject"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "name": {
                        "description": "The name of the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "potentialAction": {
                        "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
                        "$ref": "#/components/schema/Action"
                    },
                    "sameAs": {
                        "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "subjectOf": {
                        "description": "A CreativeWork or Event about this Thing.. Inverse property: about.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/CreativeWork"
                            },
                            {
                                "$ref": "#/components/schema/Event"
                            }
                        ]
                    },
                    "url": {
                        "description": "URL of the item.",
                        "nuggetType": "URL",
                        "type": "string"
                    }
                },
                "extends": "StructuredValue",
                "type": "object"
            },
            "ImageObject": {
                "title": "ImageObject",
                "description": "An image file.",
                "required": [
                    "coreType",
                    "name"
                ],
                "properties": {
                    "about": {
                        "description": "The subject matter of the content. Inverse property: subjectOf.",
                        "$ref": "#/components/schema/Thing"
                    },
                    "accessMode": {
                        "description": "The human sensory perceptual system or cognitive faculty through which a person may process or perceive information. Expected values include: auditory, tactile, textual, visual, colorDependent, chartOnVisual, chemOnVisual, diagramOnVisual, mathOnVisual, musicOnVisual, textOnVisual.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "accessModeSufficient": {
                        "description": "A list of single or combined accessModes that are sufficient to understand all the intellectual content of a resource. Expected values include: auditory, tactile, textual, visual.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "accessibilityAPI": {
                        "description": "Indicates that the resource is compatible with the referenced accessibility API (WebSchemas wiki lists possible values).",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "accessibilityControl": {
                        "description": "Identifies input methods that are sufficient to fully control the described resource (WebSchemas wiki lists possible values).",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "accessibilityFeature": {
                        "description": "Content features of the resource, such as accessible media, alternatives and supported enhancements for accessibility (WebSchemas wiki lists possible values).",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "accessibilityHazard": {
                        "description": "A characteristic of the described resource that is physiologically dangerous to some users. Related to WCAG 2.0 guideline 2.3 (WebSchemas wiki lists possible values).",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "accessibilitySummary": {
                        "description": "A human-readable summary of specific accessibility features or deficiencies, consistent with the other accessibility metadata but expressing subtleties such as \"short descriptions are present but long descriptions will be needed for non-visual users\" or \"short descriptions are present and no long descriptions are needed.\"",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "accountablePerson": {
                        "description": "Specifies the Person that is legally accountable for the CreativeWork.",
                        "$ref": "#/components/schema/Person"
                    },
                    "additionalType": {
                        "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "aggregateRating": {
                        "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
                        "$ref": "#/components/schema/AggregateRating"
                    },
                    "alternateName": {
                        "description": "An alias for the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "alternativeHeadline": {
                        "description": "A secondary title of the CreativeWork.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "associatedMedia": {
                        "description": "A media object that encodes this CreativeWork. This property is a synonym for encoding.",
                        "$ref": "#/components/schema/MediaObject"
                    },
                    "audience": {
                        "description": "An intended audience, i.e. a group for whom something was created. Supersedes serviceAudience.",
                        "$ref": "#/components/schema/Audience"
                    },
                    "audio": {
                        "description": "An embedded audio object.",
                        "$ref": "#/components/schema/AudioObject"
                    },
                    "author": {
                        "description": "The author of this content or rating. Please note that author is special in that HTML 5 provides a special mechanism for indicating authorship via the rel tag. That is equivalent to this and may be used interchangeably.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "award": {
                        "description": "An award won by or for this item. Supersedes awards.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "caption": {
                        "description": "The caption for this object.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "character": {
                        "description": "Fictional person connected with a creative work.",
                        "$ref": "#/components/schema/Person"
                    },
                    "citation": {
                        "description": "A citation or reference to another creative work, such as another publication, web page, scholarly article, etc.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/CreativeWork"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            }
                        ]
                    },
                    "comment": {
                        "description": "Comments, typically from users.",
                        "$ref": "#/components/schema/Comment"
                    },
                    "commentCount": {
                        "description": "The number of comments this CreativeWork (e.g. Article, Question or Answer) has received. This is most applicable to works published in Web sites with commenting system; additional comments may exist elsewhere.",
                        "nuggetType": "Integer",
                        "type": "integer"
                    },
                    "contentLocation": {
                        "description": "The location depicted or described in the content. For example, the location in a photograph or painting.",
                        "$ref": "#/components/schema/Place"
                    },
                    "contentRating": {
                        "description": "Official rating of a piece of content\u2014for example,'MPAA PG-13'.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "contentReferenceTime": {
                        "description": "The specific time described by a creative work, for works (e.g. articles, video objects etc.) that emphasise a particular moment within an Event.",
                        "nuggetType": "DateTime",
                        "type": "string"
                    },
                    "contributor": {
                        "description": "A secondary contributor to the CreativeWork or Event.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "copyrightHolder": {
                        "description": "The party holding the legal copyright to the CreativeWork.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "copyrightYear": {
                        "description": "The year during which the claimed copyright for the CreativeWork was first asserted.",
                        "$ref": "#/components/schema/Number"
                    },
                    "coreType": {
                        "description": "The core ActiveRules type",
                        "type": "string",
                        "enum": [
                            "Person",
                            "Product",
                            "Event",
                            "PublishedWork"
                        ]
                    },
                    "creator": {
                        "description": "The creator/author of this CreativeWork. This is the same as the Author property for CreativeWork.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "dateCreated": {
                        "description": "The date on which the CreativeWork was created or the item was added to a DataFeed.",
                        "oneOf": [
                            {
                                "nuggetType": "Date",
                                "type": "string"
                            },
                            {
                                "nuggetType": "DateTime",
                                "type": "string"
                            }
                        ]
                    },
                    "dateModified": {
                        "description": "The date on which the CreativeWork was most recently modified or when the item's entry was modified within a DataFeed.",
                        "oneOf": [
                            {
                                "nuggetType": "Date",
                                "type": "string"
                            },
                            {
                                "nuggetType": "DateTime",
                                "type": "string"
                            }
                        ]
                    },
                    "datePublished": {
                        "description": "Date of first broadcast/publication.",
                        "nuggetType": "Date",
                        "type": "string"
                    },
                    "description": {
                        "description": "A description of the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "disambiguatingDescription": {
                        "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "discussionUrl": {
                        "description": "A link to the page containing the comments of the CreativeWork.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "editor": {
                        "description": "Specifies the Person who edited the CreativeWork.",
                        "$ref": "#/components/schema/Person"
                    },
                    "educationalAlignment": {
                        "description": "An alignment to an established educational framework.",
                        "$ref": "#/components/schema/AlignmentObject"
                    },
                    "educationalUse": {
                        "description": "The purpose of a work in the context of education; for example, 'assignment', 'group work'.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "encoding": {
                        "description": "A media object that encodes this CreativeWork. This property is a synonym for associatedMedia. Supersedes encodings.",
                        "$ref": "#/components/schema/MediaObject"
                    },
                    "exampleOfWork": {
                        "description": "A creative work that this work is an example/instance/realization/derivation of. Inverse property: workExample.",
                        "$ref": "#/components/schema/CreativeWork"
                    },
                    "exifData": {
                        "description": "exif data for this object.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/PropertyValue"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            }
                        ]
                    },
                    "expires": {
                        "description": "Date the content expires and is no longer useful or available. For example a VideoObject or NewsArticle whose availability or relevance is time-limited, or a ClaimReview fact check whose publisher wants to indicate that it may no longer be relevant (or helpful to highlight) after some date.",
                        "nuggetType": "Date",
                        "type": "string"
                    },
                    "fileFormat": {
                        "description": "Media type, typically MIME format (see IANA site) of the content e.g. application/zip of a SoftwareApplication binary. In cases where a CreativeWork has several media type representations, 'encoding' can be used to indicate each MediaObject alongside particular fileFormat information. Unregistered or niche file formats can be indicated instead via the most appropriate URL, e.g. defining Web page or a Wikipedia entry.",
                        "oneOf": [
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "funder": {
                        "description": "A person or organization that supports (sponsors) something through some kind of financial contribution.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "genre": {
                        "description": "Genre of the creative work, broadcast channel or group.",
                        "oneOf": [
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "hasPart": {
                        "description": "Indicates a CreativeWork that is (in some sense) a part of this CreativeWork. Inverse property: isPartOf.",
                        "$ref": "#/components/schema/CreativeWork"
                    },
                    "headline": {
                        "description": "Headline of the article.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "identifier": {
                        "description": "The identifier property represents any kind of identifier for any kind of Thing, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See background notes for more details.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/PropertyValue"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "image": {
                        "description": "An image of the item. This can be a URL or a fully described ImageObject.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/ImageObject"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "inLanguage": {
                        "description": "The language of the content or performance or used in an action. Please use one of the language codes from the IETF BCP 47 standard. See also availableLanguage. Supersedes language.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Language"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            }
                        ]
                    },
                    "interactionStatistic": {
                        "description": "The number of interactions for the CreativeWork using the WebSite or SoftwareApplication. The most specific child type of InteractionCounter should be used. Supersedes interactionCount.",
                        "$ref": "#/components/schema/InteractionCounter"
                    },
                    "interactivityType": {
                        "description": "The predominant mode of learning supported by the learning resource. Acceptable values are 'active', 'expositive', or 'mixed'.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "isAccessibleForFree": {
                        "description": "A flag to signal that the item, event, or place is accessible for free. Supersedes free.",
                        "nuggetType": "Boolean",
                        "type": " boolean"
                    },
                    "isBasedOn": {
                        "description": "A resource that was used in the creation of this resource. This term can be repeated for multiple sources. For example, http://example.com/great-multiplication-intro.html. Supersedes isBasedOnUrl.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/CreativeWork"
                            },
                            {
                                "$ref": "#/components/schema/Product"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "isFamilyFriendly": {
                        "description": "Indicates whether this content is family friendly.",
                        "nuggetType": "Boolean",
                        "type": " boolean"
                    },
                    "isPartOf": {
                        "description": "Indicates a CreativeWork that this CreativeWork is (in some sense) part of. Inverse property: hasPart.",
                        "$ref": "#/components/schema/CreativeWork"
                    },
                    "keywords": {
                        "description": "Keywords or tags used to describe this content. Multiple entries in a keywords list are typically delimited by commas.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "learningResourceType": {
                        "description": "The predominant type or kind characterizing the learning resource. For example, 'presentation', 'handout'.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "license": {
                        "description": "A license document that applies to this content, typically indicated by URL.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/CreativeWork"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "locationCreated": {
                        "description": "The location where the CreativeWork was created, which may not be the same as the location depicted in the CreativeWork.",
                        "$ref": "#/components/schema/Place"
                    },
                    "mainEntity": {
                        "description": "Indicates the primary entity described in some page or other CreativeWork. Inverse property: mainEntityOfPage.",
                        "$ref": "#/components/schema/Thing"
                    },
                    "mainEntityOfPage": {
                        "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See background notesfor details. Inverse property: mainEntity.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/CreativeWork"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "material": {
                        "description": "A material that something is made from, e.g. leather, wool, cotton, paper.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Product"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "mentions": {
                        "description": "Indicates that the CreativeWork contains a reference to, but is not necessarily about a concept.",
                        "$ref": "#/components/schema/Thing"
                    },
                    "name": {
                        "description": "The name of the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "offers": {
                        "description": "An offer to provide this item\u2014for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event.",
                        "$ref": "#/components/schema/Offer"
                    },
                    "position": {
                        "description": "The position of an item in a series or sequence of items.",
                        "oneOf": [
                            {
                                "nuggetType": "Integer",
                                "type": "integer"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            }
                        ]
                    },
                    "potentialAction": {
                        "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
                        "$ref": "#/components/schema/Action"
                    },
                    "producer": {
                        "description": "The person or organization who produced the work (e.g. music album, movie, tv/radio series etc.).",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "provider": {
                        "description": "The service provider, service operator, or service performer; the goods producer. Another party (a seller) may offer those services or goods on behalf of the provider. A provider may also serve as the seller. Supersedes carrier.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "publication": {
                        "description": "A publication event associated with the item.",
                        "$ref": "#/components/schema/PublicationEvent"
                    },
                    "publisher": {
                        "description": "The publisher of the creative work.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "publisherImprint": {
                        "description": "The publishing division which published the comic.",
                        "$ref": "#/components/schema/Organization"
                    },
                    "publishingPrinciples": {
                        "description": "The publishingPrinciples property indicates (typically via URL) a document describing the editorial principles of an Organization (or individual e.g. a Person writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a CreativeWork (e.g. NewsArticle) the principles are those of the party primarily responsible for the creation of the CreativeWork. While such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a funder) can be expressed using schema.org terminology.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/CreativeWork"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "recordedAt": {
                        "description": "The Event where the CreativeWork was recorded. The CreativeWork may capture all or part of the event. Inverse property: recordedIn.",
                        "$ref": "#/components/schema/Event"
                    },
                    "releasedEvent": {
                        "description": "The place and time the release was issued, expressed as a PublicationEvent.",
                        "$ref": "#/components/schema/PublicationEvent"
                    },
                    "representativeOfPage": {
                        "description": "Indicates whether this image is representative of the content of the page.",
                        "nuggetType": "Boolean",
                        "type": " boolean"
                    },
                    "review": {
                        "description": "A review of the item. Supersedes reviews.",
                        "$ref": "#/components/schema/Review"
                    },
                    "sameAs": {
                        "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "schemaVersion": {
                        "description": "Indicates (by URL or string) a particular version of a schema used in some CreativeWork. For example, a document could declare a schemaVersion using an URL such as http://schema.org/version/2.0/ if precise indication of schema version was required by some application.",
                        "oneOf": [
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "sourceOrganization": {
                        "description": "The Organization on whose behalf the creator was working.",
                        "$ref": "#/components/schema/Organization"
                    },
                    "spatialCoverage": {
                        "description": "The spatialCoverage of a CreativeWork indicates the place(s) which are the focus of the content. It is a subproperty of contentLocation intended primarily for more technical and detailed materials. For example with a Dataset, it indicates areas that the dataset describes: a dataset of New York weather would have spatialCoverage which was the place: the state of New York. Supersedes spatial.",
                        "$ref": "#/components/schema/Place"
                    },
                    "sponsor": {
                        "description": "A person or organization that supports a thing through a pledge, promise, or financial contribution. e.g. a sponsor of a Medical Study or a corporate sponsor of an event.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "subjectOf": {
                        "description": "A CreativeWork or Event about this Thing.. Inverse property: about.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/CreativeWork"
                            },
                            {
                                "$ref": "#/components/schema/Event"
                            }
                        ]
                    },
                    "temporalCoverage": {
                        "description": "The temporalCoverage of a CreativeWork indicates the period that the content applies to, i.e. that it describes, either as a DateTime or as a textual string indicating a time period in ISO 8601 time interval format. In the case of a Dataset it will typically indicate the relevant time period in a precise notation (e.g. for a 2011 census dataset, the year 2011 would be written \"2011/2012\"). Other forms of content e.g. ScholarlyArticle, Book, TVSeries or TVEpisode may indicate their temporalCoverage in broader terms - textually or via well-known URL. Written works such as books may sometimes have precise temporal coverage too, e.g. a work set in 1939 - 1945 can be indicated in ISO 8601 interval format format via \"1939/1945\". Supersedes datasetTimeInterval, temporal.",
                        "oneOf": [
                            {
                                "nuggetType": "DateTime",
                                "type": "string"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "text": {
                        "description": "The textual content of this CreativeWork.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "thumbnail": {
                        "description": "Thumbnail image for an image or video.",
                        "$ref": "#/components/schema/ImageObject"
                    },
                    "thumbnailUrl": {
                        "description": "A thumbnail image relevant to the Thing.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "timeRequired": {
                        "description": "Approximate or typical time it takes to work with or through this learning resource for the typical intended target audience, e.g. 'P30M', 'P1H25M'.",
                        "$ref": "#/components/schema/Duration"
                    },
                    "translationOfWork": {
                        "description": "The work that this work has been translated from. e.g. \u7269\u79cd\u8d77\u6e90 is a translationOf \u201cOn the Origin of Species\u201d Inverse property: workTranslation.",
                        "$ref": "#/components/schema/CreativeWork"
                    },
                    "translator": {
                        "description": "Organization or person who adapts a creative work to different languages, regional differences and technical requirements of a target market, or that translates during some event.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "typicalAgeRange": {
                        "description": "The typical expected age range, e.g. '7-9', '11-'.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "url": {
                        "description": "URL of the item.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "version": {
                        "description": "The version of the CreativeWork embodied by a specified resource.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Number"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            }
                        ]
                    },
                    "video": {
                        "description": "An embedded video object.",
                        "$ref": "#/components/schema/VideoObject"
                    },
                    "workExample": {
                        "description": "Example/instance/realization/derivation of the concept of this creative work. eg. The paperback edition, first edition, or eBook. Inverse property: exampleOfWork.",
                        "$ref": "#/components/schema/CreativeWork"
                    },
                    "workTranslation": {
                        "description": "A work that is a translation of the content of this work. e.g. \u897f\u904a\u8a18 has an English workTranslation \u201cJourney to the West\u201d,a German workTranslation \u201cMonkeys Pilgerfahrt\u201d and a Vietnamese translation T\u00e2y du k\u00fd b\u00ecnh kh\u1ea3o. Inverse property: translationOfWork.",
                        "$ref": "#/components/schema/CreativeWork"
                    }
                },
                "extends": "MediaObject",
                "type": "object"
            },
            "Product": {
                "title": "Product",
                "description": "Any offered product or service. For example: a pair of shoes; a concert ticket; the rental of a car; a haircut; or an episode of a TV show streamed online.",
                "properties": {
                    "additionalProperty": {
                        "description": "A property-value pair representing an additional characteristics of the entitity, e.g. a product feature or another characteristic for which there is no matching property in schema.org. Note: Publishers should be aware that applications designed to use specific schema.org properties (e.g. http://schema.org/width, http://schema.org/color, http://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.",
                        "$ref": "#/components/schema/PropertyValue"
                    },
                    "additionalType": {
                        "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "aggregateRating": {
                        "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
                        "$ref": "#/components/schema/AggregateRating"
                    },
                    "alternateName": {
                        "description": "An alias for the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "audience": {
                        "description": "An intended audience, i.e. a group for whom something was created. Supersedes serviceAudience.",
                        "$ref": "#/components/schema/Audience"
                    },
                    "award": {
                        "description": "An award won by or for this item. Supersedes awards.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "brand": {
                        "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Brand"
                            },
                            {
                                "$ref": "#/components/schema/Organization"
                            }
                        ]
                    },
                    "category": {
                        "description": "A category for the item. Greater signs or slashes can be used to informally indicate a category hierarchy.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/PhysicalActivityCategory"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            },
                            {
                                "$ref": "#/components/schema/Thing"
                            }
                        ]
                    },
                    "color": {
                        "description": "The color of the product.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "coreType": {
                        "description": "The core ActiveRules type",
                        "type": "string",
                        "enum": [
                            "Person",
                            "Product",
                            "Event",
                            "PublishedWork"
                        ]
                    },
                    "depth": {
                        "description": "The depth of the item.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Distance"
                            },
                            {
                                "$ref": "#/components/schema/QuantitativeValue"
                            }
                        ]
                    },
                    "description": {
                        "description": "A description of the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "gtin12": {
                        "description": "The GTIN-12 code of the product, or the product to which the offer refers. The GTIN-12 is the 12-digit GS1 Identification Key composed of a U.P.C. Company Prefix, Item Reference, and Check Digit used to identify trade items. See GS1 GTIN Summary for more details.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "gtin13": {
                        "description": "The GTIN-13 code of the product, or the product to which the offer refers. This is equivalent to 13-digit ISBN codes and EAN UCC-13. Former 12-digit UPC codes can be converted into a GTIN-13 code by simply adding a preceeding zero. See GS1 GTIN Summary for more details.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "gtin14": {
                        "description": "The GTIN-14 code of the product, or the product to which the offer refers. See GS1 GTIN Summary for more details.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "gtin8": {
                        "description": "The GTIN-8 code of the product, or the product to which the offer refers. This code is also known as EAN/UCC-8 or 8-digit EAN. See GS1 GTIN Summary for more details.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "height": {
                        "description": "The height of the item.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Distance"
                            },
                            {
                                "$ref": "#/components/schema/QuantitativeValue"
                            }
                        ]
                    },
                    "identifier": {
                        "description": "The identifier property represents any kind of identifier for any kind of Thing, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See background notes for more details.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/PropertyValue"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "image": {
                        "description": "An image of the item. This can be a URL or a fully described ImageObject.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/ImageObject"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "isAccessoryOrSparePartFor": {
                        "description": "A pointer to another product (or multiple products) for which this product is an accessory or spare part.",
                        "$ref": "#/components/schema/Product"
                    },
                    "isConsumableFor": {
                        "description": "A pointer to another product (or multiple products) for which this product is a consumable.",
                        "$ref": "#/components/schema/Product"
                    },
                    "isRelatedTo": {
                        "description": "A pointer to another, somehow related product (or multiple products).",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Product"
                            },
                            {
                                "$ref": "#/components/schema/Service"
                            }
                        ]
                    },
                    "isSimilarTo": {
                        "description": "A pointer to another, functionally similar product (or multiple products).",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Product"
                            },
                            {
                                "$ref": "#/components/schema/Service"
                            }
                        ]
                    },
                    "itemCondition": {
                        "description": "A predefined value from OfferItemCondition or a textual description of the condition of the product or service, or the products or services included in the offer.",
                        "$ref": "#/components/schema/OfferItemCondition"
                    },
                    "logo": {
                        "description": "An associated logo.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/ImageObject"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "manufacturer": {
                        "description": "The manufacturer of the product.",
                        "$ref": "#/components/schema/Organization"
                    },
                    "material": {
                        "description": "A material that something is made from, e.g. leather, wool, cotton, paper.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Product"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "model": {
                        "description": "The model of the product. Use with the URL of a ProductModel or a textual representation of the model identifier. The URL of the ProductModel can be from an external source. It is recommended to additionally provide strong product identifiers via the gtin8/gtin13/gtin14 and mpn properties.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/ProductModel"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            }
                        ]
                    },
                    "mpn": {
                        "description": "The Manufacturer Part Number (MPN) of the product, or the product to which the offer refers.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "offers": {
                        "description": "An offer to provide this item\u2014for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event.",
                        "$ref": "#/components/schema/Offer"
                    },
                    "potentialAction": {
                        "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
                        "$ref": "#/components/schema/Action"
                    },
                    "productID": {
                        "description": "The product identifier, such as ISBN. For example: meta itemprop=\"productID\" content=\"isbn:123-456-789\".",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "productionDate": {
                        "description": "The date of production of the item, e.g. vehicle.",
                        "nuggetType": "Date",
                        "type": "string"
                    },
                    "purchaseDate": {
                        "description": "The date the item e.g. vehicle was purchased by the current owner.",
                        "nuggetType": "Date",
                        "type": "string"
                    },
                    "releaseDate": {
                        "description": "The release date of a product or product model. This can be used to distinguish the exact variant of a product.",
                        "nuggetType": "Date",
                        "type": "string"
                    },
                    "review": {
                        "description": "A review of the item. Supersedes reviews.",
                        "$ref": "#/components/schema/Review"
                    },
                    "sameAs": {
                        "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "sku": {
                        "description": "The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier for a product or service, or the product to which the offer refers.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "subjectOf": {
                        "description": "A CreativeWork or Event about this Thing.. Inverse property: about.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/CreativeWork"
                            },
                            {
                                "$ref": "#/components/schema/Event"
                            }
                        ]
                    },
                    "url": {
                        "description": "URL of the item.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "weight": {
                        "description": "The weight of the product or person.",
                        "$ref": "#/components/schema/QuantitativeValue"
                    },
                    "width": {
                        "description": "The width of the item.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Distance"
                            },
                            {
                                "$ref": "#/components/schema/QuantitativeValue"
                            }
                        ]
                    }
                },
                "extends": "Thing",
                "type": "object"
            },
            "Service": {
                "title": "Service",
                "description": "A service provided by an organization, e.g. delivery service, print services, etc.",
                "required": [
                    "coreType",
                    "name"
                ],
                "properties": {
                    "additionalType": {
                        "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "aggregateRating": {
                        "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
                        "$ref": "#/components/schema/AggregateRating"
                    },
                    "alternateName": {
                        "description": "An alias for the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "areaServed": {
                        "description": "The geographic area where a service or offered item is provided. Supersedes serviceArea.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/AdministrativeArea"
                            },
                            {
                                "$ref": "#/components/schema/GeoShape"
                            },
                            {
                                "$ref": "#/components/schema/Place"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            }
                        ]
                    },
                    "audience": {
                        "description": "An intended audience, i.e. a group for whom something was created. Supersedes serviceAudience.",
                        "$ref": "#/components/schema/Audience"
                    },
                    "award": {
                        "description": "An award won by or for this item. Supersedes awards.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "brand": {
                        "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Brand"
                            },
                            {
                                "$ref": "#/components/schema/Organization"
                            }
                        ]
                    },
                    "category": {
                        "description": "A category for the item. Greater signs or slashes can be used to informally indicate a category hierarchy.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/PhysicalActivityCategory"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            },
                            {
                                "$ref": "#/components/schema/Thing"
                            }
                        ]
                    },
                    "coreType": {
                        "description": "The core ActiveRules type",
                        "type": "string",
                        "enum": [
                            "Person",
                            "Product",
                            "Event",
                            "PublishedWork"
                        ]
                    },
                    "description": {
                        "description": "A description of the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "hasOfferCatalog": {
                        "description": "Indicates an OfferCatalog listing for this Organization, Person, or Service.",
                        "$ref": "#/components/schema/OfferCatalog"
                    },
                    "identifier": {
                        "description": "The identifier property represents any kind of identifier for any kind of Thing, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See background notes for more details.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/PropertyValue"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "image": {
                        "description": "An image of the item. This can be a URL or a fully described ImageObject.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/ImageObject"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "isRelatedTo": {
                        "description": "A pointer to another, somehow related product (or multiple products).",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Product"
                            },
                            {
                                "$ref": "#/components/schema/Service"
                            }
                        ]
                    },
                    "isSimilarTo": {
                        "description": "A pointer to another, functionally similar product (or multiple products).",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Product"
                            },
                            {
                                "$ref": "#/components/schema/Service"
                            }
                        ]
                    },
                    "logo": {
                        "description": "An associated logo.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/ImageObject"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "name": {
                        "description": "The name of the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "offers": {
                        "description": "An offer to provide this item\u2014for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event.",
                        "$ref": "#/components/schema/Offer"
                    },
                    "potentialAction": {
                        "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
                        "$ref": "#/components/schema/Action"
                    },
                    "provider": {
                        "description": "The service provider, service operator, or service performer; the goods producer. Another party (a seller) may offer those services or goods on behalf of the provider. A provider may also serve as the seller. Supersedes carrier.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "review": {
                        "description": "A review of the item. Supersedes reviews.",
                        "$ref": "#/components/schema/Review"
                    },
                    "sameAs": {
                        "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "subjectOf": {
                        "description": "A CreativeWork or Event about this Thing.. Inverse property: about.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/CreativeWork"
                            },
                            {
                                "$ref": "#/components/schema/Event"
                            }
                        ]
                    },
                    "url": {
                        "description": "URL of the item.",
                        "nuggetType": "URL",
                        "type": "string"
                    }
                },
                "extends": "Intangible",
                "type": "object"
            },
            "Offer": {
                "title": "Offer",
                "description": "An offer to transfer some rights to an item or to provide a service \u2014 for example, an offer to sell tickets to an event, to rent the DVD of a movie, to stream a TV show over the internet, to repair a motorcycle, or to loan a book. For GTIN-related fields, see Check Digit calculator and validation guide from GS1.",
                "required": [
                    "coreType",
                    "name"
                ],
                "properties": {
                    "acceptedPaymentMethod": {
                        "description": "The payment method(s) accepted by seller for this offer.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/LoanOrCredit"
                            },
                            {
                                "$ref": "#/components/schema/PaymentMethod"
                            }
                        ]
                    },
                    "addOn": {
                        "description": "An additional offer that can only be obtained in combination with the first base offer (e.g. supplements and extensions that are available for a surcharge).",
                        "$ref": "#/components/schema/Offer"
                    },
                    "additionalType": {
                        "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "advanceBookingRequirement": {
                        "description": "The amount of time that is required between accepting the offer and the actual usage of the resource or service.",
                        "$ref": "#/components/schema/QuantitativeValue"
                    },
                    "aggregateRating": {
                        "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
                        "$ref": "#/components/schema/AggregateRating"
                    },
                    "alternateName": {
                        "description": "An alias for the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "areaServed": {
                        "description": "The geographic area where a service or offered item is provided. Supersedes serviceArea.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/AdministrativeArea"
                            },
                            {
                                "$ref": "#/components/schema/GeoShape"
                            },
                            {
                                "$ref": "#/components/schema/Place"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            }
                        ]
                    },
                    "availability": {
                        "description": "The availability of this item\u2014for example In stock, Out of stock, Pre-order, etc.",
                        "$ref": "#/components/schema/ItemAvailability"
                    },
                    "availabilityEnds": {
                        "description": "The end of the availability of the product or service included in the offer.",
                        "nuggetType": "DateTime",
                        "type": "string"
                    },
                    "availabilityStarts": {
                        "description": "The beginning of the availability of the product or service included in the offer.",
                        "nuggetType": "DateTime",
                        "type": "string"
                    },
                    "availableAtOrFrom": {
                        "description": "The place(s) from which the offer can be obtained (e.g. store locations).",
                        "$ref": "#/components/schema/Place"
                    },
                    "availableDeliveryMethod": {
                        "description": "The delivery method(s) available for this offer.",
                        "$ref": "#/components/schema/DeliveryMethod"
                    },
                    "businessFunction": {
                        "description": "The business function (e.g. sell, lease, repair, dispose) of the offer or component of a bundle (TypeAndQuantityNode). The default is http://purl.org/goodrelations/v1#Sell.",
                        "$ref": "#/components/schema/BusinessFunction"
                    },
                    "category": {
                        "description": "A category for the item. Greater signs or slashes can be used to informally indicate a category hierarchy.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/PhysicalActivityCategory"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            },
                            {
                                "$ref": "#/components/schema/Thing"
                            }
                        ]
                    },
                    "coreType": {
                        "description": "The core ActiveRules type",
                        "type": "string",
                        "enum": [
                            "Person",
                            "Product",
                            "Event",
                            "PublishedWork"
                        ]
                    },
                    "deliveryLeadTime": {
                        "description": "The typical delay between the receipt of the order and the goods either leaving the warehouse or being prepared for pickup, in case the delivery method is on site pickup.",
                        "$ref": "#/components/schema/QuantitativeValue"
                    },
                    "description": {
                        "description": "A description of the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "eligibleCustomerType": {
                        "description": "The type(s) of customers for which the given offer is valid.",
                        "$ref": "#/components/schema/BusinessEntityType"
                    },
                    "eligibleDuration": {
                        "description": "The duration for which the given offer is valid.",
                        "$ref": "#/components/schema/QuantitativeValue"
                    },
                    "eligibleQuantity": {
                        "description": "The interval and unit of measurement of ordering quantities for which the offer or price specification is valid. This allows e.g. specifying that a certain freight charge is valid only for a certain quantity.",
                        "$ref": "#/components/schema/QuantitativeValue"
                    },
                    "eligibleRegion": {
                        "description": "The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place, or the GeoShape for the geo-political region(s) for which the offer or delivery charge specification is valid. See also ineligibleRegion.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/GeoShape"
                            },
                            {
                                "$ref": "#/components/schema/Place"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            }
                        ]
                    },
                    "eligibleTransactionVolume": {
                        "description": "The transaction volume, in a monetary unit, for which the offer or price specification is valid, e.g. for indicating a minimal purchasing volume, to express free shipping above a certain order volume, or to limit the acceptance of credit cards to purchases to a certain minimal amount.",
                        "$ref": "#/components/schema/PriceSpecification"
                    },
                    "gtin12": {
                        "description": "The GTIN-12 code of the product, or the product to which the offer refers. The GTIN-12 is the 12-digit GS1 Identification Key composed of a U.P.C. Company Prefix, Item Reference, and Check Digit used to identify trade items. See GS1 GTIN Summary for more details.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "gtin13": {
                        "description": "The GTIN-13 code of the product, or the product to which the offer refers. This is equivalent to 13-digit ISBN codes and EAN UCC-13. Former 12-digit UPC codes can be converted into a GTIN-13 code by simply adding a preceeding zero. See GS1 GTIN Summary for more details.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "gtin14": {
                        "description": "The GTIN-14 code of the product, or the product to which the offer refers. See GS1 GTIN Summary for more details.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "gtin8": {
                        "description": "The GTIN-8 code of the product, or the product to which the offer refers. This code is also known as EAN/UCC-8 or 8-digit EAN. See GS1 GTIN Summary for more details.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "identifier": {
                        "description": "The identifier property represents any kind of identifier for any kind of Thing, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See background notes for more details.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/PropertyValue"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "image": {
                        "description": "An image of the item. This can be a URL or a fully described ImageObject.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/ImageObject"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "includesObject": {
                        "description": "This links to a node or nodes indicating the exact quantity of the products included in the offer.",
                        "$ref": "#/components/schema/TypeAndQuantityNode"
                    },
                    "ineligibleRegion": {
                        "description": "The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place, or the GeoShape for the geo-political region(s) for which the offer or delivery charge specification is not valid, e.g. a region where the transaction is not allowed. See also eligibleRegion.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/GeoShape"
                            },
                            {
                                "$ref": "#/components/schema/Place"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            }
                        ]
                    },
                    "inventoryLevel": {
                        "description": "The current approximate inventory level for the item or items.",
                        "$ref": "#/components/schema/QuantitativeValue"
                    },
                    "itemCondition": {
                        "description": "A predefined value from OfferItemCondition or a textual description of the condition of the product or service, or the products or services included in the offer.",
                        "$ref": "#/components/schema/OfferItemCondition"
                    },
                    "itemOffered": {
                        "description": "The item being offered.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Product"
                            },
                            {
                                "$ref": "#/components/schema/Service"
                            }
                        ]
                    },
                    "mpn": {
                        "description": "The Manufacturer Part Number (MPN) of the product, or the product to which the offer refers.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "offeredBy": {
                        "description": "A pointer to the organization or person making the offer. Inverse property: makesOffer.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "potentialAction": {
                        "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
                        "$ref": "#/components/schema/Action"
                    },
                    "price": {
                        "description": "The offer price of a product, or of a price component when attached to PriceSpecification and its subtypes. Usage guidelines: Use the priceCurrency property (with ISO 4217 codes e.g. \"USD\") instead of including ambiguous symbols such as '$' in the value. Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator. Note that both RDFa and Microdata syntax allow the use of a \"content=\" attribute for publishing simple machine-readable values alongside more human-friendly formatting. Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Number"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            }
                        ]
                    },
                    "priceCurrency": {
                        "description": "The currency (in 3-letter ISO 4217 format) of the price or a price component, when attached to PriceSpecificationand its subtypes.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "priceSpecification": {
                        "description": "One or more detailed price specifications, indicating the unit price and delivery or payment charges.",
                        "$ref": "#/components/schema/PriceSpecification"
                    },
                    "priceValidUntil": {
                        "description": "The date after which the price is no longer available.",
                        "nuggetType": "Date",
                        "type": "string"
                    },
                    "review": {
                        "description": "A review of the item. Supersedes reviews.",
                        "$ref": "#/components/schema/Review"
                    },
                    "sameAs": {
                        "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "seller": {
                        "description": "An entity which offers (sells / leases / lends / loans) the services / goods. A seller may also be a provider. Supersedes merchant, vendor.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "serialNumber": {
                        "description": "The serial number or any alphanumeric identifier of a particular product. When attached to an offer, it is a shortcut for the serial number of the product included in the offer.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "sku": {
                        "description": "The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier for a product or service, or the product to which the offer refers.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "subjectOf": {
                        "description": "A CreativeWork or Event about this Thing.. Inverse property: about.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/CreativeWork"
                            },
                            {
                                "$ref": "#/components/schema/Event"
                            }
                        ]
                    },
                    "url": {
                        "description": "URL of the item.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "validFrom": {
                        "description": "The date when the item becomes valid.",
                        "nuggetType": "DateTime",
                        "type": "string"
                    },
                    "validThrough": {
                        "description": "The date after when the item is not valid. For example the end of an offer, salary period, or a period of opening hours.",
                        "nuggetType": "DateTime",
                        "type": "string"
                    },
                    "warranty": {
                        "description": "The warranty promise(s) included in the offer. Supersedes warrantyPromise.",
                        "$ref": "#/components/schema/WarrantyPromise"
                    }
                },
                "extends": "Intangible",
                "type": "object"
            },
            "Action": {
                "title": "Action",
                "description": "An action performed by a direct agent and indirect participants upon a direct object. Optionally happens at a location with the help of an inanimate instrument. The execution of the action may produce a result. Specific action sub-type documentation specifies the exact expectation of each argument/role.",
                "required": [
                    "coreType",
                    "name"
                ],
                "properties": {
                    "actionStatus": {
                        "description": "Indicates the current disposition of the Action.",
                        "$ref": "#/components/schema/ActionStatusType"
                    },
                    "additionalType": {
                        "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "agent": {
                        "description": "The direct performer or driver of the action (animate or inanimate). e.g. John wrote a book.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "alternateName": {
                        "description": "An alias for the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "coreType": {
                        "description": "The core ActiveRules type",
                        "type": "string",
                        "enum": [
                            "Person",
                            "Product",
                            "Event",
                            "PublishedWork"
                        ]
                    },
                    "description": {
                        "description": "A description of the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "endTime": {
                        "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to December. Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions.",
                        "nuggetType": "DateTime",
                        "type": "string"
                    },
                    "error": {
                        "description": "For failed actions, more information on the cause of the failure.",
                        "$ref": "#/components/schema/Thing"
                    },
                    "identifier": {
                        "description": "The identifier property represents any kind of identifier for any kind of Thing, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See background notes for more details.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/PropertyValue"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "image": {
                        "description": "An image of the item. This can be a URL or a fully described ImageObject.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/ImageObject"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "instrument": {
                        "description": "The object that helped the agent perform the action. e.g. John wrote a book with a pen.",
                        "$ref": "#/components/schema/Thing"
                    },
                    "name": {
                        "description": "The name of the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "object": {
                        "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read a book.",
                        "$ref": "#/components/schema/Thing"
                    },
                    "participant": {
                        "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with Steve.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "potentialAction": {
                        "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
                        "$ref": "#/components/schema/Action"
                    },
                    "result": {
                        "description": "The result produced in the action. e.g. John wrote a book.",
                        "$ref": "#/components/schema/Thing"
                    },
                    "sameAs": {
                        "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "startTime": {
                        "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to December. Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions.",
                        "nuggetType": "DateTime",
                        "type": "string"
                    },
                    "subjectOf": {
                        "description": "A CreativeWork or Event about this Thing.. Inverse property: about.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/CreativeWork"
                            },
                            {
                                "$ref": "#/components/schema/Event"
                            }
                        ]
                    },
                    "target": {
                        "description": "Indicates a target EntryPoint for an Action.",
                        "$ref": "#/components/schema/EntryPoint"
                    },
                    "url": {
                        "description": "URL of the item.",
                        "nuggetType": "URL",
                        "type": "string"
                    }
                },
                "extends": "Thing",
                "type": "object"
            },
            "Person": {
                "title": "Person",
                "description": "A person (alive, dead, undead, or fictional)",
                "required": [
                    "coreType",
                    "name"
                ],
                "properties": {
                    "additionalName": {
                        "description": "An additional name for a Person, can be used for a middle name.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "additionalType": {
                        "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "address": {
                        "description": "Physical address of the item.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/PostalAddress"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            }
                        ]
                    },
                    "affiliation": {
                        "description": "An organization that this person is affiliated with. For example, a school/university, a club, or a team.",
                        "$ref": "#/components/schema/Organization"
                    },
                    "alternateName": {
                        "description": "An alias for the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "alumniOf": {
                        "description": "An organization that the person is an alumni of. Inverse property: alumni.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/EducationalOrganization"
                            },
                            {
                                "$ref": "#/components/schema/Organization"
                            }
                        ]
                    },
                    "award": {
                        "description": "An award won by or for this item. Supersedes awards.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "birthDate": {
                        "description": "Date of birth.",
                        "nuggetType": "Date",
                        "type": "string"
                    },
                    "birthPlace": {
                        "description": "The place where the person was born.",
                        "$ref": "#/components/schema/Place"
                    },
                    "brand": {
                        "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Brand"
                            },
                            {
                                "$ref": "#/components/schema/Organization"
                            }
                        ]
                    },
                    "children": {
                        "description": "A child of the person.",
                        "$ref": "#/components/schema/Person"
                    },
                    "colleague": {
                        "description": "A colleague of the person. Supersedes colleagues.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Person"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "contactPoint": {
                        "description": "A contact point for a person or organization. Supersedes contactPoints.",
                        "$ref": "#/components/schema/ContactPoint"
                    },
                    "coreType": {
                        "description": "The core ActiveRules type",
                        "type": "string",
                        "enum": [
                            "Person",
                            "Product",
                            "Event",
                            "PublishedWork"
                        ]
                    },
                    "deathDate": {
                        "description": "Date of death.",
                        "nuggetType": "Date",
                        "type": "string"
                    },
                    "deathPlace": {
                        "description": "The place where the person died.",
                        "$ref": "#/components/schema/Place"
                    },
                    "description": {
                        "description": "A description of the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "duns": {
                        "description": "The Dun & Bradstreet DUNS number for identifying an organization or business person.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email address.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "familyName": {
                        "description": "Family name. In the U.S., the last name of an Person. This can be used along with givenName instead of the name property.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "faxNumber": {
                        "description": "The fax number.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "follows": {
                        "description": "The most generic uni-directional social relation.",
                        "$ref": "#/components/schema/Person"
                    },
                    "funder": {
                        "description": "A person or organization that supports (sponsors) something through some kind of financial contribution.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "gender": {
                        "description": "Gender of the person. While http://schema.org/Male and http://schema.org/Female may be used, text strings are also acceptable for people who do not identify as a binary gender.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/GenderType"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            }
                        ]
                    },
                    "givenName": {
                        "description": "Given name. In the U.S., the first name of a Person. This can be used along with familyName instead of the name property.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "globalLocationNumber": {
                        "description": "The Global Location Number (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "hasOccupation": {
                        "description": "The Person's occupation. For past professions, use Role for expressing dates.",
                        "$ref": "#/components/schema/Occupation"
                    },
                    "hasOfferCatalog": {
                        "description": "Indicates an OfferCatalog listing for this Organization, Person, or Service.",
                        "$ref": "#/components/schema/OfferCatalog"
                    },
                    "hasPOS": {
                        "description": "Points-of-Sales operated by the organization or person.",
                        "$ref": "#/components/schema/Place"
                    },
                    "height": {
                        "description": "The height of the item.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Distance"
                            },
                            {
                                "$ref": "#/components/schema/QuantitativeValue"
                            }
                        ]
                    },
                    "homeLocation": {
                        "description": "A contact location for a person's residence.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/ContactPoint"
                            },
                            {
                                "$ref": "#/components/schema/Place"
                            }
                        ]
                    },
                    "honorificPrefix": {
                        "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "honorificSuffix": {
                        "description": "An honorific suffix preceding a Person's name such as M.D. /PhD/MSCSW.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "identifier": {
                        "description": "The identifier property represents any kind of identifier for any kind of Thing, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See background notes for more details.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/PropertyValue"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "image": {
                        "description": "An image of the item. This can be a URL or a fully described ImageObject.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/ImageObject"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "isicV4": {
                        "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "jobTitle": {
                        "description": "The job title of the person (for example, Financial Manager).",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "knows": {
                        "description": "The most generic bi-directional social/work relation.",
                        "$ref": "#/components/schema/Person"
                    },
                    "makesOffer": {
                        "description": "A pointer to products or services offered by the organization or person. Inverse property: offeredBy.",
                        "$ref": "#/components/schema/Offer"
                    },
                    "memberOf": {
                        "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs. Inverse property: member.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/ProgramMembership"
                            }
                        ]
                    },
                    "naics": {
                        "description": "The North American Industry Classification System (NAICS) code for a particular organization or business person.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "nationality": {
                        "description": "Nationality of the person.",
                        "$ref": "#/components/schema/Country"
                    },
                    "netWorth": {
                        "description": "The total financial value of the person as calculated by subtracting assets from liabilities.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/MonetaryAmount"
                            },
                            {
                                "$ref": "#/components/schema/PriceSpecification"
                            }
                        ]
                    },
                    "owns": {
                        "description": "Products owned by the organization or person.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/OwnershipInfo"
                            },
                            {
                                "$ref": "#/components/schema/Product"
                            }
                        ]
                    },
                    "parent": {
                        "description": "A parent of this person. Supersedes parents.",
                        "$ref": "#/components/schema/Person"
                    },
                    "performerIn": {
                        "description": "Event that this person is a performer or participant in.",
                        "$ref": "#/components/schema/Event"
                    },
                    "potentialAction": {
                        "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
                        "$ref": "#/components/schema/Action"
                    },
                    "publishingPrinciples": {
                        "description": "The publishingPrinciples property indicates (typically via URL) a document describing the editorial principles of an Organization (or individual e.g. a Person writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a CreativeWork (e.g. NewsArticle) the principles are those of the party primarily responsible for the creation of the CreativeWork. While such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a funder) can be expressed using schema.org terminology.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/CreativeWork"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "relatedTo": {
                        "description": "The most generic familial relation.",
                        "$ref": "#/components/schema/Person"
                    },
                    "sameAs": {
                        "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "seeks": {
                        "description": "A pointer to products or services sought by the organization or person (demand).",
                        "$ref": "#/components/schema/Demand"
                    },
                    "sibling": {
                        "description": "A sibling of the person. Supersedes siblings.",
                        "$ref": "#/components/schema/Person"
                    },
                    "sponsor": {
                        "description": "A person or organization that supports a thing through a pledge, promise, or financial contribution. e.g. a sponsor of a Medical Study or a corporate sponsor of an event.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "spouse": {
                        "description": "The person's spouse.",
                        "$ref": "#/components/schema/Person"
                    },
                    "subjectOf": {
                        "description": "A CreativeWork or Event about this Thing.. Inverse property: about.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/CreativeWork"
                            },
                            {
                                "$ref": "#/components/schema/Event"
                            }
                        ]
                    },
                    "taxID": {
                        "description": "The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "telephone": {
                        "description": "The telephone number.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "url": {
                        "description": "URL of the item.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "vatID": {
                        "description": "The Value-added Tax ID of the organization or person.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "weight": {
                        "description": "The weight of the product or person.",
                        "$ref": "#/components/schema/QuantitativeValue"
                    },
                    "workLocation": {
                        "description": "A contact location for a person's place of work.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/ContactPoint"
                            },
                            {
                                "$ref": "#/components/schema/Place"
                            }
                        ]
                    },
                    "worksFor": {
                        "description": "Organizations that the person works for.",
                        "$ref": "#/components/schema/Organization"
                    }
                },
                "extends": "Thing",
                "type": "object"
            },
            "Review": {
                "title": "Review",
                "description": "A review of an item - for example, of a restaurant, movie, or store.",
                "required": [
                    "coreType",
                    "name"
                ],
                "properties": {
                    "about": {
                        "description": "The subject matter of the content. Inverse property: subjectOf.",
                        "$ref": "#/components/schema/Thing"
                    },
                    "accessMode": {
                        "description": "The human sensory perceptual system or cognitive faculty through which a person may process or perceive information. Expected values include: auditory, tactile, textual, visual, colorDependent, chartOnVisual, chemOnVisual, diagramOnVisual, mathOnVisual, musicOnVisual, textOnVisual.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "accessModeSufficient": {
                        "description": "A list of single or combined accessModes that are sufficient to understand all the intellectual content of a resource. Expected values include: auditory, tactile, textual, visual.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "accessibilityAPI": {
                        "description": "Indicates that the resource is compatible with the referenced accessibility API (WebSchemas wiki lists possible values).",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "accessibilityControl": {
                        "description": "Identifies input methods that are sufficient to fully control the described resource (WebSchemas wiki lists possible values).",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "accessibilityFeature": {
                        "description": "Content features of the resource, such as accessible media, alternatives and supported enhancements for accessibility (WebSchemas wiki lists possible values).",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "accessibilityHazard": {
                        "description": "A characteristic of the described resource that is physiologically dangerous to some users. Related to WCAG 2.0 guideline 2.3 (WebSchemas wiki lists possible values).",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "accessibilitySummary": {
                        "description": "A human-readable summary of specific accessibility features or deficiencies, consistent with the other accessibility metadata but expressing subtleties such as \"short descriptions are present but long descriptions will be needed for non-visual users\" or \"short descriptions are present and no long descriptions are needed.\"",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "accountablePerson": {
                        "description": "Specifies the Person that is legally accountable for the CreativeWork.",
                        "$ref": "#/components/schema/Person"
                    },
                    "additionalType": {
                        "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "aggregateRating": {
                        "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
                        "$ref": "#/components/schema/AggregateRating"
                    },
                    "alternateName": {
                        "description": "An alias for the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "alternativeHeadline": {
                        "description": "A secondary title of the CreativeWork.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "associatedMedia": {
                        "description": "A media object that encodes this CreativeWork. This property is a synonym for encoding.",
                        "$ref": "#/components/schema/MediaObject"
                    },
                    "audience": {
                        "description": "An intended audience, i.e. a group for whom something was created. Supersedes serviceAudience.",
                        "$ref": "#/components/schema/Audience"
                    },
                    "audio": {
                        "description": "An embedded audio object.",
                        "$ref": "#/components/schema/AudioObject"
                    },
                    "author": {
                        "description": "The author of this content or rating. Please note that author is special in that HTML 5 provides a special mechanism for indicating authorship via the rel tag. That is equivalent to this and may be used interchangeably.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "award": {
                        "description": "An award won by or for this item. Supersedes awards.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "character": {
                        "description": "Fictional person connected with a creative work.",
                        "$ref": "#/components/schema/Person"
                    },
                    "citation": {
                        "description": "A citation or reference to another creative work, such as another publication, web page, scholarly article, etc.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/CreativeWork"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            }
                        ]
                    },
                    "comment": {
                        "description": "Comments, typically from users.",
                        "$ref": "#/components/schema/Comment"
                    },
                    "commentCount": {
                        "description": "The number of comments this CreativeWork (e.g. Article, Question or Answer) has received. This is most applicable to works published in Web sites with commenting system; additional comments may exist elsewhere.",
                        "nuggetType": "Integer",
                        "type": "integer"
                    },
                    "contentLocation": {
                        "description": "The location depicted or described in the content. For example, the location in a photograph or painting.",
                        "$ref": "#/components/schema/Place"
                    },
                    "contentRating": {
                        "description": "Official rating of a piece of content\u2014for example,'MPAA PG-13'.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "contentReferenceTime": {
                        "description": "The specific time described by a creative work, for works (e.g. articles, video objects etc.) that emphasise a particular moment within an Event.",
                        "nuggetType": "DateTime",
                        "type": "string"
                    },
                    "contributor": {
                        "description": "A secondary contributor to the CreativeWork or Event.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "copyrightHolder": {
                        "description": "The party holding the legal copyright to the CreativeWork.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "copyrightYear": {
                        "description": "The year during which the claimed copyright for the CreativeWork was first asserted.",
                        "$ref": "#/components/schema/Number"
                    },
                    "coreType": {
                        "description": "The core ActiveRules type",
                        "type": "string",
                        "enum": [
                            "Person",
                            "Product",
                            "Event",
                            "PublishedWork"
                        ]
                    },
                    "creator": {
                        "description": "The creator/author of this CreativeWork. This is the same as the Author property for CreativeWork.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "dateCreated": {
                        "description": "The date on which the CreativeWork was created or the item was added to a DataFeed.",
                        "oneOf": [
                            {
                                "nuggetType": "Date",
                                "type": "string"
                            },
                            {
                                "nuggetType": "DateTime",
                                "type": "string"
                            }
                        ]
                    },
                    "dateModified": {
                        "description": "The date on which the CreativeWork was most recently modified or when the item's entry was modified within a DataFeed.",
                        "oneOf": [
                            {
                                "nuggetType": "Date",
                                "type": "string"
                            },
                            {
                                "nuggetType": "DateTime",
                                "type": "string"
                            }
                        ]
                    },
                    "datePublished": {
                        "description": "Date of first broadcast/publication.",
                        "nuggetType": "Date",
                        "type": "string"
                    },
                    "description": {
                        "description": "A description of the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "disambiguatingDescription": {
                        "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "discussionUrl": {
                        "description": "A link to the page containing the comments of the CreativeWork.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "editor": {
                        "description": "Specifies the Person who edited the CreativeWork.",
                        "$ref": "#/components/schema/Person"
                    },
                    "educationalAlignment": {
                        "description": "An alignment to an established educational framework.",
                        "$ref": "#/components/schema/AlignmentObject"
                    },
                    "educationalUse": {
                        "description": "The purpose of a work in the context of education; for example, 'assignment', 'group work'.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "encoding": {
                        "description": "A media object that encodes this CreativeWork. This property is a synonym for associatedMedia. Supersedes encodings.",
                        "$ref": "#/components/schema/MediaObject"
                    },
                    "exampleOfWork": {
                        "description": "A creative work that this work is an example/instance/realization/derivation of. Inverse property: workExample.",
                        "$ref": "#/components/schema/CreativeWork"
                    },
                    "expires": {
                        "description": "Date the content expires and is no longer useful or available. For example a VideoObject or NewsArticle whose availability or relevance is time-limited, or a ClaimReview fact check whose publisher wants to indicate that it may no longer be relevant (or helpful to highlight) after some date.",
                        "nuggetType": "Date",
                        "type": "string"
                    },
                    "fileFormat": {
                        "description": "Media type, typically MIME format (see IANA site) of the content e.g. application/zip of a SoftwareApplication binary. In cases where a CreativeWork has several media type representations, 'encoding' can be used to indicate each MediaObject alongside particular fileFormat information. Unregistered or niche file formats can be indicated instead via the most appropriate URL, e.g. defining Web page or a Wikipedia entry.",
                        "oneOf": [
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "funder": {
                        "description": "A person or organization that supports (sponsors) something through some kind of financial contribution.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "genre": {
                        "description": "Genre of the creative work, broadcast channel or group.",
                        "oneOf": [
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "hasPart": {
                        "description": "Indicates a CreativeWork that is (in some sense) a part of this CreativeWork. Inverse property: isPartOf.",
                        "$ref": "#/components/schema/CreativeWork"
                    },
                    "headline": {
                        "description": "Headline of the article.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "identifier": {
                        "description": "The identifier property represents any kind of identifier for any kind of Thing, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See background notes for more details.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/PropertyValue"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "image": {
                        "description": "An image of the item. This can be a URL or a fully described ImageObject.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/ImageObject"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "inLanguage": {
                        "description": "The language of the content or performance or used in an action. Please use one of the language codes from the IETF BCP 47 standard. See also availableLanguage. Supersedes language.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Language"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            }
                        ]
                    },
                    "interactionStatistic": {
                        "description": "The number of interactions for the CreativeWork using the WebSite or SoftwareApplication. The most specific child type of InteractionCounter should be used. Supersedes interactionCount.",
                        "$ref": "#/components/schema/InteractionCounter"
                    },
                    "interactivityType": {
                        "description": "The predominant mode of learning supported by the learning resource. Acceptable values are 'active', 'expositive', or 'mixed'.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "isAccessibleForFree": {
                        "description": "A flag to signal that the item, event, or place is accessible for free. Supersedes free.",
                        "nuggetType": "Boolean",
                        "type": " boolean"
                    },
                    "isBasedOn": {
                        "description": "A resource that was used in the creation of this resource. This term can be repeated for multiple sources. For example, http://example.com/great-multiplication-intro.html. Supersedes isBasedOnUrl.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/CreativeWork"
                            },
                            {
                                "$ref": "#/components/schema/Product"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "isFamilyFriendly": {
                        "description": "Indicates whether this content is family friendly.",
                        "nuggetType": "Boolean",
                        "type": " boolean"
                    },
                    "isPartOf": {
                        "description": "Indicates a CreativeWork that this CreativeWork is (in some sense) part of. Inverse property: hasPart.",
                        "$ref": "#/components/schema/CreativeWork"
                    },
                    "keywords": {
                        "description": "Keywords or tags used to describe this content. Multiple entries in a keywords list are typically delimited by commas.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "learningResourceType": {
                        "description": "The predominant type or kind characterizing the learning resource. For example, 'presentation', 'handout'.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "license": {
                        "description": "A license document that applies to this content, typically indicated by URL.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/CreativeWork"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "locationCreated": {
                        "description": "The location where the CreativeWork was created, which may not be the same as the location depicted in the CreativeWork.",
                        "$ref": "#/components/schema/Place"
                    },
                    "mainEntity": {
                        "description": "Indicates the primary entity described in some page or other CreativeWork. Inverse property: mainEntityOfPage.",
                        "$ref": "#/components/schema/Thing"
                    },
                    "mainEntityOfPage": {
                        "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See background notesfor details. Inverse property: mainEntity.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/CreativeWork"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "material": {
                        "description": "A material that something is made from, e.g. leather, wool, cotton, paper.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Product"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "mentions": {
                        "description": "Indicates that the CreativeWork contains a reference to, but is not necessarily about a concept.",
                        "$ref": "#/components/schema/Thing"
                    },
                    "name": {
                        "description": "The name of the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "offers": {
                        "description": "An offer to provide this item\u2014for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event.",
                        "$ref": "#/components/schema/Offer"
                    },
                    "position": {
                        "description": "The position of an item in a series or sequence of items.",
                        "oneOf": [
                            {
                                "nuggetType": "Integer",
                                "type": "integer"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            }
                        ]
                    },
                    "potentialAction": {
                        "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
                        "$ref": "#/components/schema/Action"
                    },
                    "producer": {
                        "description": "The person or organization who produced the work (e.g. music album, movie, tv/radio series etc.).",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "provider": {
                        "description": "The service provider, service operator, or service performer; the goods producer. Another party (a seller) may offer those services or goods on behalf of the provider. A provider may also serve as the seller. Supersedes carrier.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "publication": {
                        "description": "A publication event associated with the item.",
                        "$ref": "#/components/schema/PublicationEvent"
                    },
                    "publisher": {
                        "description": "The publisher of the creative work.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "publisherImprint": {
                        "description": "The publishing division which published the comic.",
                        "$ref": "#/components/schema/Organization"
                    },
                    "publishingPrinciples": {
                        "description": "The publishingPrinciples property indicates (typically via URL) a document describing the editorial principles of an Organization (or individual e.g. a Person writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a CreativeWork (e.g. NewsArticle) the principles are those of the party primarily responsible for the creation of the CreativeWork. While such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a funder) can be expressed using schema.org terminology.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/CreativeWork"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "recordedAt": {
                        "description": "The Event where the CreativeWork was recorded. The CreativeWork may capture all or part of the event. Inverse property: recordedIn.",
                        "$ref": "#/components/schema/Event"
                    },
                    "releasedEvent": {
                        "description": "The place and time the release was issued, expressed as a PublicationEvent.",
                        "$ref": "#/components/schema/PublicationEvent"
                    },
                    "review": {
                        "description": "A review of the item. Supersedes reviews.",
                        "$ref": "#/components/schema/Review"
                    },
                    "sameAs": {
                        "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "schemaVersion": {
                        "description": "Indicates (by URL or string) a particular version of a schema used in some CreativeWork. For example, a document could declare a schemaVersion using an URL such as http://schema.org/version/2.0/ if precise indication of schema version was required by some application.",
                        "oneOf": [
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "sourceOrganization": {
                        "description": "The Organization on whose behalf the creator was working.",
                        "$ref": "#/components/schema/Organization"
                    },
                    "spatialCoverage": {
                        "description": "The spatialCoverage of a CreativeWork indicates the place(s) which are the focus of the content. It is a subproperty of contentLocation intended primarily for more technical and detailed materials. For example with a Dataset, it indicates areas that the dataset describes: a dataset of New York weather would have spatialCoverage which was the place: the state of New York. Supersedes spatial.",
                        "$ref": "#/components/schema/Place"
                    },
                    "sponsor": {
                        "description": "A person or organization that supports a thing through a pledge, promise, or financial contribution. e.g. a sponsor of a Medical Study or a corporate sponsor of an event.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "subjectOf": {
                        "description": "A CreativeWork or Event about this Thing.. Inverse property: about.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/CreativeWork"
                            },
                            {
                                "$ref": "#/components/schema/Event"
                            }
                        ]
                    },
                    "temporalCoverage": {
                        "description": "The temporalCoverage of a CreativeWork indicates the period that the content applies to, i.e. that it describes, either as a DateTime or as a textual string indicating a time period in ISO 8601 time interval format. In the case of a Dataset it will typically indicate the relevant time period in a precise notation (e.g. for a 2011 census dataset, the year 2011 would be written \"2011/2012\"). Other forms of content e.g. ScholarlyArticle, Book, TVSeries or TVEpisode may indicate their temporalCoverage in broader terms - textually or via well-known URL. Written works such as books may sometimes have precise temporal coverage too, e.g. a work set in 1939 - 1945 can be indicated in ISO 8601 interval format format via \"1939/1945\". Supersedes datasetTimeInterval, temporal.",
                        "oneOf": [
                            {
                                "nuggetType": "DateTime",
                                "type": "string"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "text": {
                        "description": "The textual content of this CreativeWork.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "thumbnailUrl": {
                        "description": "A thumbnail image relevant to the Thing.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "timeRequired": {
                        "description": "Approximate or typical time it takes to work with or through this learning resource for the typical intended target audience, e.g. 'P30M', 'P1H25M'.",
                        "$ref": "#/components/schema/Duration"
                    },
                    "translationOfWork": {
                        "description": "The work that this work has been translated from. e.g. \u7269\u79cd\u8d77\u6e90 is a translationOf \u201cOn the Origin of Species\u201d Inverse property: workTranslation.",
                        "$ref": "#/components/schema/CreativeWork"
                    },
                    "translator": {
                        "description": "Organization or person who adapts a creative work to different languages, regional differences and technical requirements of a target market, or that translates during some event.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "typicalAgeRange": {
                        "description": "The typical expected age range, e.g. '7-9', '11-'.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "url": {
                        "description": "URL of the item.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "version": {
                        "description": "The version of the CreativeWork embodied by a specified resource.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Number"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            }
                        ]
                    },
                    "video": {
                        "description": "An embedded video object.",
                        "$ref": "#/components/schema/VideoObject"
                    },
                    "workExample": {
                        "description": "Example/instance/realization/derivation of the concept of this creative work. eg. The paperback edition, first edition, or eBook. Inverse property: exampleOfWork.",
                        "$ref": "#/components/schema/CreativeWork"
                    },
                    "workTranslation": {
                        "description": "A work that is a translation of the content of this work. e.g. \u897f\u904a\u8a18 has an English workTranslation \u201cJourney to the West\u201d,a German workTranslation \u201cMonkeys Pilgerfahrt\u201d and a Vietnamese translation T\u00e2y du k\u00fd b\u00ecnh kh\u1ea3o. Inverse property: translationOfWork.",
                        "$ref": "#/components/schema/CreativeWork"
                    }
                },
                "extends": "CreativeWork",
                "type": "object"
            },
            "CreativeWork": {
                "title": "CreativeWork",
                "description": "An action performed by a direct agent and indirect participants upon a direct object. Optionally happens at a location with the help of an inanimate instrument. The execution of the action may produce a result. Specific action sub-type documentation specifies the exact expectation of each argument/role. See also blog post and Actions overview document.",
                "required": [
                    "coreType",
                    "name"
                ],
                "properties": {
                    "about": {
                        "description": "The subject matter of the content. Inverse property: subjectOf.",
                        "$ref": "#/components/schema/Thing"
                    },
                    "accessMode": {
                        "description": "The human sensory perceptual system or cognitive faculty through which a person may process or perceive information. Expected values include: auditory, tactile, textual, visual, colorDependent, chartOnVisual, chemOnVisual, diagramOnVisual, mathOnVisual, musicOnVisual, textOnVisual.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "accessModeSufficient": {
                        "description": "A list of single or combined accessModes that are sufficient to understand all the intellectual content of a resource. Expected values include: auditory, tactile, textual, visual.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "accessibilityAPI": {
                        "description": "Indicates that the resource is compatible with the referenced accessibility API (WebSchemas wiki lists possible values).",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "accessibilityControl": {
                        "description": "Identifies input methods that are sufficient to fully control the described resource (WebSchemas wiki lists possible values).",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "accessibilityFeature": {
                        "description": "Content features of the resource, such as accessible media, alternatives and supported enhancements for accessibility (WebSchemas wiki lists possible values).",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "accessibilityHazard": {
                        "description": "A characteristic of the described resource that is physiologically dangerous to some users. Related to WCAG 2.0 guideline 2.3 (WebSchemas wiki lists possible values).",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "accessibilitySummary": {
                        "description": "A human-readable summary of specific accessibility features or deficiencies, consistent with the other accessibility metadata but expressing subtleties such as \"short descriptions are present but long descriptions will be needed for non-visual users\" or \"short descriptions are present and no long descriptions are needed.\"",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "accountablePerson": {
                        "description": "Specifies the Person that is legally accountable for the CreativeWork.",
                        "$ref": "#/components/schema/Person"
                    },
                    "additionalType": {
                        "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "aggregateRating": {
                        "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
                        "$ref": "#/components/schema/AggregateRating"
                    },
                    "alternateName": {
                        "description": "An alias for the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "alternativeHeadline": {
                        "description": "A secondary title of the CreativeWork.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "associatedMedia": {
                        "description": "A media object that encodes this CreativeWork. This property is a synonym for encoding.",
                        "$ref": "#/components/schema/MediaObject"
                    },
                    "audience": {
                        "description": "An intended audience, i.e. a group for whom something was created. Supersedes serviceAudience.",
                        "$ref": "#/components/schema/Audience"
                    },
                    "audio": {
                        "description": "An embedded audio object.",
                        "$ref": "#/components/schema/AudioObject"
                    },
                    "author": {
                        "description": "The author of this content or rating. Please note that author is special in that HTML 5 provides a special mechanism for indicating authorship via the rel tag. That is equivalent to this and may be used interchangeably.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "award": {
                        "description": "An award won by or for this item. Supersedes awards.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "character": {
                        "description": "Fictional person connected with a creative work.",
                        "$ref": "#/components/schema/Person"
                    },
                    "citation": {
                        "description": "A citation or reference to another creative work, such as another publication, web page, scholarly article, etc.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/CreativeWork"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            }
                        ]
                    },
                    "comment": {
                        "description": "Comments, typically from users.",
                        "$ref": "#/components/schema/Comment"
                    },
                    "commentCount": {
                        "description": "The number of comments this CreativeWork (e.g. Article, Question or Answer) has received. This is most applicable to works published in Web sites with commenting system; additional comments may exist elsewhere.",
                        "nuggetType": "Integer",
                        "type": "integer"
                    },
                    "contentLocation": {
                        "description": "The location depicted or described in the content. For example, the location in a photograph or painting.",
                        "$ref": "#/components/schema/Place"
                    },
                    "contentRating": {
                        "description": "Official rating of a piece of content\u2014for example,'MPAA PG-13'.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "contentReferenceTime": {
                        "description": "The specific time described by a creative work, for works (e.g. articles, video objects etc.) that emphasise a particular moment within an Event.",
                        "nuggetType": "DateTime",
                        "type": "string"
                    },
                    "contributor": {
                        "description": "A secondary contributor to the CreativeWork or Event.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "copyrightHolder": {
                        "description": "The party holding the legal copyright to the CreativeWork.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "copyrightYear": {
                        "description": "The year during which the claimed copyright for the CreativeWork was first asserted.",
                        "$ref": "#/components/schema/Number"
                    },
                    "coreType": {
                        "description": "The core ActiveRules type",
                        "type": "string",
                        "enum": [
                            "Person",
                            "Product",
                            "Event",
                            "PublishedWork"
                        ]
                    },
                    "creator": {
                        "description": "The creator/author of this CreativeWork. This is the same as the Author property for CreativeWork.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "dateCreated": {
                        "description": "The date on which the CreativeWork was created or the item was added to a DataFeed.",
                        "oneOf": [
                            {
                                "nuggetType": "Date",
                                "type": "string"
                            },
                            {
                                "nuggetType": "DateTime",
                                "type": "string"
                            }
                        ]
                    },
                    "dateModified": {
                        "description": "The date on which the CreativeWork was most recently modified or when the item's entry was modified within a DataFeed.",
                        "oneOf": [
                            {
                                "nuggetType": "Date",
                                "type": "string"
                            },
                            {
                                "nuggetType": "DateTime",
                                "type": "string"
                            }
                        ]
                    },
                    "datePublished": {
                        "description": "Date of first broadcast/publication.",
                        "nuggetType": "Date",
                        "type": "string"
                    },
                    "description": {
                        "description": "A description of the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "disambiguatingDescription": {
                        "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "discussionUrl": {
                        "description": "A link to the page containing the comments of the CreativeWork.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "editor": {
                        "description": "Specifies the Person who edited the CreativeWork.",
                        "$ref": "#/components/schema/Person"
                    },
                    "educationalAlignment": {
                        "description": "An alignment to an established educational framework.",
                        "$ref": "#/components/schema/AlignmentObject"
                    },
                    "educationalUse": {
                        "description": "The purpose of a work in the context of education; for example, 'assignment', 'group work'.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "encoding": {
                        "description": "A media object that encodes this CreativeWork. This property is a synonym for associatedMedia. Supersedes encodings.",
                        "$ref": "#/components/schema/MediaObject"
                    },
                    "exampleOfWork": {
                        "description": "A creative work that this work is an example/instance/realization/derivation of. Inverse property: workExample.",
                        "$ref": "#/components/schema/CreativeWork"
                    },
                    "expires": {
                        "description": "Date the content expires and is no longer useful or available. For example a VideoObject or NewsArticle whose availability or relevance is time-limited, or a ClaimReview fact check whose publisher wants to indicate that it may no longer be relevant (or helpful to highlight) after some date.",
                        "nuggetType": "Date",
                        "type": "string"
                    },
                    "fileFormat": {
                        "description": "Media type, typically MIME format (see IANA site) of the content e.g. application/zip of a SoftwareApplication binary. In cases where a CreativeWork has several media type representations, 'encoding' can be used to indicate each MediaObject alongside particular fileFormat information. Unregistered or niche file formats can be indicated instead via the most appropriate URL, e.g. defining Web page or a Wikipedia entry.",
                        "oneOf": [
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "funder": {
                        "description": "A person or organization that supports (sponsors) something through some kind of financial contribution.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "genre": {
                        "description": "Genre of the creative work, broadcast channel or group.",
                        "oneOf": [
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "hasPart": {
                        "description": "Indicates a CreativeWork that is (in some sense) a part of this CreativeWork. Inverse property: isPartOf.",
                        "$ref": "#/components/schema/CreativeWork"
                    },
                    "headline": {
                        "description": "Headline of the article.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "identifier": {
                        "description": "The identifier property represents any kind of identifier for any kind of Thing, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See background notes for more details.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/PropertyValue"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "image": {
                        "description": "An image of the item. This can be a URL or a fully described ImageObject.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/ImageObject"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "inLanguage": {
                        "description": "The language of the content or performance or used in an action. Please use one of the language codes from the IETF BCP 47 standard. See also availableLanguage. Supersedes language.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Language"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            }
                        ]
                    },
                    "interactionStatistic": {
                        "description": "The number of interactions for the CreativeWork using the WebSite or SoftwareApplication. The most specific child type of InteractionCounter should be used. Supersedes interactionCount.",
                        "$ref": "#/components/schema/InteractionCounter"
                    },
                    "interactivityType": {
                        "description": "The predominant mode of learning supported by the learning resource. Acceptable values are 'active', 'expositive', or 'mixed'.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "isAccessibleForFree": {
                        "description": "A flag to signal that the item, event, or place is accessible for free. Supersedes free.",
                        "nuggetType": "Boolean",
                        "type": " boolean"
                    },
                    "isBasedOn": {
                        "description": "A resource that was used in the creation of this resource. This term can be repeated for multiple sources. For example, http://example.com/great-multiplication-intro.html. Supersedes isBasedOnUrl.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/CreativeWork"
                            },
                            {
                                "$ref": "#/components/schema/Product"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "isFamilyFriendly": {
                        "description": "Indicates whether this content is family friendly.",
                        "nuggetType": "Boolean",
                        "type": " boolean"
                    },
                    "isPartOf": {
                        "description": "Indicates a CreativeWork that this CreativeWork is (in some sense) part of. Inverse property: hasPart.",
                        "$ref": "#/components/schema/CreativeWork"
                    },
                    "keywords": {
                        "description": "Keywords or tags used to describe this content. Multiple entries in a keywords list are typically delimited by commas.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "learningResourceType": {
                        "description": "The predominant type or kind characterizing the learning resource. For example, 'presentation', 'handout'.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "license": {
                        "description": "A license document that applies to this content, typically indicated by URL.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/CreativeWork"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "locationCreated": {
                        "description": "The location where the CreativeWork was created, which may not be the same as the location depicted in the CreativeWork.",
                        "$ref": "#/components/schema/Place"
                    },
                    "mainEntity": {
                        "description": "Indicates the primary entity described in some page or other CreativeWork. Inverse property: mainEntityOfPage.",
                        "$ref": "#/components/schema/Thing"
                    },
                    "mainEntityOfPage": {
                        "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See background notesfor details. Inverse property: mainEntity.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/CreativeWork"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "material": {
                        "description": "A material that something is made from, e.g. leather, wool, cotton, paper.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Product"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "mentions": {
                        "description": "Indicates that the CreativeWork contains a reference to, but is not necessarily about a concept.",
                        "$ref": "#/components/schema/Thing"
                    },
                    "name": {
                        "description": "The name of the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "offers": {
                        "description": "An offer to provide this item\u2014for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event.",
                        "$ref": "#/components/schema/Offer"
                    },
                    "position": {
                        "description": "The position of an item in a series or sequence of items.",
                        "oneOf": [
                            {
                                "nuggetType": "Integer",
                                "type": "integer"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            }
                        ]
                    },
                    "potentialAction": {
                        "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
                        "$ref": "#/components/schema/Action"
                    },
                    "producer": {
                        "description": "The person or organization who produced the work (e.g. music album, movie, tv/radio series etc.).",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "provider": {
                        "description": "The service provider, service operator, or service performer; the goods producer. Another party (a seller) may offer those services or goods on behalf of the provider. A provider may also serve as the seller. Supersedes carrier.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "publication": {
                        "description": "A publication event associated with the item.",
                        "$ref": "#/components/schema/PublicationEvent"
                    },
                    "publisher": {
                        "description": "The publisher of the creative work.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "publisherImprint": {
                        "description": "The publishing division which published the comic.",
                        "$ref": "#/components/schema/Organization"
                    },
                    "publishingPrinciples": {
                        "description": "The publishingPrinciples property indicates (typically via URL) a document describing the editorial principles of an Organization (or individual e.g. a Person writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a CreativeWork (e.g. NewsArticle) the principles are those of the party primarily responsible for the creation of the CreativeWork. While such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a funder) can be expressed using schema.org terminology.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/CreativeWork"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "recordedAt": {
                        "description": "The Event where the CreativeWork was recorded. The CreativeWork may capture all or part of the event. Inverse property: recordedIn.",
                        "$ref": "#/components/schema/Event"
                    },
                    "releasedEvent": {
                        "description": "The place and time the release was issued, expressed as a PublicationEvent.",
                        "$ref": "#/components/schema/PublicationEvent"
                    },
                    "review": {
                        "description": "A review of the item. Supersedes reviews.",
                        "$ref": "#/components/schema/Review"
                    },
                    "sameAs": {
                        "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "schemaVersion": {
                        "description": "Indicates (by URL or string) a particular version of a schema used in some CreativeWork. For example, a document could declare a schemaVersion using an URL such as http://schema.org/version/2.0/ if precise indication of schema version was required by some application.",
                        "oneOf": [
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "sourceOrganization": {
                        "description": "The Organization on whose behalf the creator was working.",
                        "$ref": "#/components/schema/Organization"
                    },
                    "spatialCoverage": {
                        "description": "The spatialCoverage of a CreativeWork indicates the place(s) which are the focus of the content. It is a subproperty of contentLocation intended primarily for more technical and detailed materials. For example with a Dataset, it indicates areas that the dataset describes: a dataset of New York weather would have spatialCoverage which was the place: the state of New York. Supersedes spatial.",
                        "$ref": "#/components/schema/Place"
                    },
                    "sponsor": {
                        "description": "A person or organization that supports a thing through a pledge, promise, or financial contribution. e.g. a sponsor of a Medical Study or a corporate sponsor of an event.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "subjectOf": {
                        "description": "A CreativeWork or Event about this Thing.. Inverse property: about.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/CreativeWork"
                            },
                            {
                                "$ref": "#/components/schema/Event"
                            }
                        ]
                    },
                    "temporalCoverage": {
                        "description": "The temporalCoverage of a CreativeWork indicates the period that the content applies to, i.e. that it describes, either as a DateTime or as a textual string indicating a time period in ISO 8601 time interval format. In the case of a Dataset it will typically indicate the relevant time period in a precise notation (e.g. for a 2011 census dataset, the year 2011 would be written \"2011/2012\"). Other forms of content e.g. ScholarlyArticle, Book, TVSeries or TVEpisode may indicate their temporalCoverage in broader terms - textually or via well-known URL. Written works such as books may sometimes have precise temporal coverage too, e.g. a work set in 1939 - 1945 can be indicated in ISO 8601 interval format format via \"1939/1945\". Supersedes datasetTimeInterval, temporal.",
                        "oneOf": [
                            {
                                "nuggetType": "DateTime",
                                "type": "string"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "text": {
                        "description": "The textual content of this CreativeWork.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "thumbnailUrl": {
                        "description": "A thumbnail image relevant to the Thing.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "timeRequired": {
                        "description": "Approximate or typical time it takes to work with or through this learning resource for the typical intended target audience, e.g. 'P30M', 'P1H25M'.",
                        "$ref": "#/components/schema/Duration"
                    },
                    "translationOfWork": {
                        "description": "The work that this work has been translated from. e.g. \u7269\u79cd\u8d77\u6e90 is a translationOf \u201cOn the Origin of Species\u201d Inverse property: workTranslation.",
                        "$ref": "#/components/schema/CreativeWork"
                    },
                    "translator": {
                        "description": "Organization or person who adapts a creative work to different languages, regional differences and technical requirements of a target market, or that translates during some event.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "typicalAgeRange": {
                        "description": "The typical expected age range, e.g. '7-9', '11-'.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "url": {
                        "description": "URL of the item.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "version": {
                        "description": "The version of the CreativeWork embodied by a specified resource.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Number"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            }
                        ]
                    },
                    "video": {
                        "description": "An embedded video object.",
                        "$ref": "#/components/schema/VideoObject"
                    },
                    "workExample": {
                        "description": "Example/instance/realization/derivation of the concept of this creative work. eg. The paperback edition, first edition, or eBook. Inverse property: exampleOfWork.",
                        "$ref": "#/components/schema/CreativeWork"
                    },
                    "workTranslation": {
                        "description": "A work that is a translation of the content of this work. e.g. \u897f\u904a\u8a18 has an English workTranslation \u201cJourney to the West\u201d,a German workTranslation \u201cMonkeys Pilgerfahrt\u201d and a Vietnamese translation T\u00e2y du k\u00fd b\u00ecnh kh\u1ea3o. Inverse property: translationOfWork.",
                        "$ref": "#/components/schema/CreativeWork"
                    }
                },
                "extends": "Thing",
                "type": "object"
            },
            "Event": {
                "description": "An event happening at a certain time and location, such as a concert, lecture, or festival. Ticketing information may be added via the offers property. Repeated events may be structured as separate Event objects.",
                "title": "Event",
                "properties": {
                    "actor": {
                        "description": "An actor, e.g. in tv, radio, movie, video games etc., or in an event. Actors can be associated with individual items or with a series, episode, clip. Supersedes actors.",
                        "$ref": "#/components/schema/Person"
                    },
                    "additionalType": {
                        "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "aggregateRating": {
                        "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
                        "$ref": "#/components/schema/AggregateRating"
                    },
                    "alternateName": {
                        "description": "An alias for the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "attendee": {
                        "description": "A person or organization attending the event. Supersedes attendees.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "audience": {
                        "description": "An intended audience, i.e. a group for whom something was created. Supersedes serviceAudience.",
                        "$ref": "#/components/schema/Audience"
                    },
                    "composer": {
                        "description": "The person or organization who wrote a composition, or who is the composer of a work performed at some event.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "contributor": {
                        "description": "A secondary contributor to the CreativeWork or Event.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "coreType": {
                        "description": "The core ActiveRules type",
                        "type": "string",
                        "enum": [
                            "Person",
                            "Product",
                            "Event",
                            "PublishedWork"
                        ]
                    },
                    "description": {
                        "description": "A description of the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "director": {
                        "description": "A director of e.g. tv, radio, movie, video gaming etc. content, or of an event. Directors can be associated with individual items or with a series, episode, clip. Supersedes directors.",
                        "$ref": "#/components/schema/Person"
                    },
                    "doorTime": {
                        "description": "The time admission will commence.",
                        "nuggetType": "DateTime",
                        "type": "string"
                    },
                    "duration": {
                        "description": "The duration of the item (movie, audio recording, event, etc.) in ISO 8601 date format.",
                        "$ref": "#/components/schema/Duration"
                    },
                    "endDate": {
                        "description": "The end date and time of the item (in ISO 8601 date format).",
                        "oneOf": [
                            {
                                "nuggetType": "Date",
                                "type": "string"
                            },
                            {
                                "nuggetType": "DateTime",
                                "type": "string"
                            }
                        ]
                    },
                    "eventStatus": {
                        "description": "An eventStatus of an event represents its status; particularly useful when an event is cancelled or rescheduled.",
                        "$ref": "#/components/schema/EventStatusType"
                    },
                    "funder": {
                        "description": "A person or organization that supports (sponsors) something through some kind of financial contribution.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "identifier": {
                        "description": "The identifier property represents any kind of identifier for any kind of Thing, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See background notes for more details.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/PropertyValue"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "image": {
                        "description": "An image of the item. This can be a URL or a fully described ImageObject.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/ImageObject"
                            },
                            {
                                "nuggetType": "URL",
                                "type": "string"
                            }
                        ]
                    },
                    "inLanguage": {
                        "description": "The language of the content or performance or used in an action. Please use one of the language codes from the IETF BCP 47 standard. See also availableLanguage. Supersedes language.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Language"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            }
                        ]
                    },
                    "isAccessibleForFree": {
                        "description": "A flag to signal that the item, event, or place is accessible for free. Supersedes free.",
                        "nuggetType": "Boolean",
                        "type": " boolean"
                    },
                    "location": {
                        "description": "The location of for example where the event is happening, an organization is located, or where an action takes place.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Place"
                            },
                            {
                                "$ref": "#/components/schema/PostalAddress"
                            },
                            {
                                "nuggetType": "Text",
                                "type": "string"
                            }
                        ]
                    },
                    "maximumAttendeeCapacity": {
                        "description": "The total number of individuals that may attend an event or venue.",
                        "nuggetType": "Integer",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name of the item.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "offers": {
                        "description": "An offer to provide this item\u2014for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event.",
                        "$ref": "#/components/schema/Offer"
                    },
                    "organizer": {
                        "description": "An organizer of an Event.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "performer": {
                        "description": "A performer at the event\u2014for example, a presenter, musician, musical group or actor. Supersedes performers.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "potentialAction": {
                        "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
                        "$ref": "#/components/schema/Action"
                    },
                    "previousStartDate": {
                        "description": "Used in conjunction with eventStatus for rescheduled or cancelled events. This property contains the previously scheduled start date. For rescheduled events, the startDate property should be used for the newly scheduled start date. In the (rare) case of an event that has been postponed and rescheduled multiple times, this field may be repeated.",
                        "nuggetType": "Date",
                        "type": "string"
                    },
                    "recordedIn": {
                        "description": "The CreativeWork that captured all or part of this Event. Inverse property: recordedAt.",
                        "$ref": "#/components/schema/CreativeWork"
                    },
                    "remainingAttendeeCapacity": {
                        "description": "The number of attendee places for an event that remain unallocated.",
                        "nuggetType": "Integer",
                        "type": "integer"
                    },
                    "review": {
                        "description": "A review of the item. Supersedes reviews.",
                        "$ref": "#/components/schema/Review"
                    },
                    "sameAs": {
                        "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "sponsor": {
                        "description": "A person or organization that supports a thing through a pledge, promise, or financial contribution. e.g. a sponsor of a Medical Study or a corporate sponsor of an event.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "startDate": {
                        "description": "The start date and time of the item (in ISO 8601 date format).",
                        "oneOf": [
                            {
                                "nuggetType": "Date",
                                "type": "string"
                            },
                            {
                                "nuggetType": "DateTime",
                                "type": "string"
                            }
                        ]
                    },
                    "subEvent": {
                        "description": "An Event that is part of this event. For example, a conference event includes many presentations, each of which is a subEvent of the conference. Supersedes subEvents. Inverse property: superEvent.",
                        "$ref": "#/components/schema/Event"
                    },
                    "subjectOf": {
                        "description": "A CreativeWork or Event about this Thing.. Inverse property: about.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/CreativeWork"
                            },
                            {
                                "$ref": "#/components/schema/Event"
                            }
                        ]
                    },
                    "superEvent": {
                        "description": "An event that this event is a part of. For example, a collection of individual music performances might each have a music festival as their superEvent. Inverse property: subEvent.",
                        "$ref": "#/components/schema/Event"
                    },
                    "translator": {
                        "description": "Organization or person who adapts a creative work to different languages, regional differences and technical requirements of a target market, or that translates during some event.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schema/Organization"
                            },
                            {
                                "$ref": "#/components/schema/Person"
                            }
                        ]
                    },
                    "typicalAgeRange": {
                        "description": "The typical expected age range, e.g. '7-9', '11-'.",
                        "nuggetType": "Text",
                        "type": "string"
                    },
                    "url": {
                        "description": "URL of the item.",
                        "nuggetType": "URL",
                        "type": "string"
                    },
                    "workFeatured": {
                        "description": "A work featured in some event, e.g. exhibited in an ExhibitionEvent. Specific subproperties are available for workPerformed (e.g. a play), or a workPresented (a Movie at a ScreeningEvent).",
                        "$ref": "#/components/schema/CreativeWork"
                    },
                    "workPerformed": {
                        "description": "A work performed in some event, for example a play performed in a TheaterEvent.",
                        "$ref": "#/components/schema/CreativeWork"
                    }
                },
                "extends": "Thing",
                "type": "object"
            }
        }
    }
}